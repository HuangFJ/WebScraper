{"AST":[{"Name":"updateDB","HType":"v","Pos":[84,1,88,20],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"proto","HType":"v","Pos":[84,10,15],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"json","HType":"v","Pos":[84,16,20],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"conn","HType":"v","Pos":[85,5,9],"GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":"","AllTypes":[],"Package":""},{"Name":"connectSqlite3","HType":"v","Pos":[85,13,27],"GType":"Var","QType":"GHC.IO.FilePath\n-> GHC.Types.IO Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"FilePath -> IO Connection","Module":"Database.HDBC.Sqlite3.Connection","AllTypes":[],"Package":"HDBC-sqlite3-2.3.3.0"},{"Name":"run","HType":"v","Pos":[86,5,8],"GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection\n-> GHC.Base.String\n-> [Database.HDBC.SqlValue.SqlValue]\n-> GHC.Types.IO GHC.Integer.Type.Integer","Type":"IConnection Connection =>\nConnection -> String -> [SqlValue] -> IO Integer","Module":"Database.HDBC.Types","AllTypes":[],"Package":"HDBC-2.3.1.1"},{"Name":"conn","HType":"v","Pos":[86,9,13],"GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":"","AllTypes":[],"Package":""},{"Name":"toSql","HType":"v","Pos":[86,67,72],"GType":"Var","QType":"Data.Convertible.Base.Convertible\n  GHC.Base.String Database.HDBC.SqlValue.SqlValue =>\nGHC.Base.String -> Database.HDBC.SqlValue.SqlValue","Type":"Convertible String SqlValue => String -> SqlValue","Module":"Database.HDBC.SqlValue","AllTypes":[],"Package":"HDBC-2.3.1.1"},{"Name":"json","HType":"v","Pos":[86,73,77],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"toSql","HType":"v","Pos":[86,79,84],"GType":"Var","QType":"Data.Convertible.Base.Convertible\n  GHC.Base.String Database.HDBC.SqlValue.SqlValue =>\nGHC.Base.String -> Database.HDBC.SqlValue.SqlValue","Type":"Convertible String SqlValue => String -> SqlValue","Module":"Database.HDBC.SqlValue","AllTypes":[],"Package":"HDBC-2.3.1.1"},{"Name":"proto","HType":"v","Pos":[86,85,90],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"commit","HType":"v","Pos":[87,5,11],"GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection -> GHC.Types.IO ()","Type":"IConnection Connection => Connection -> IO ()","Module":"Database.HDBC.Types","AllTypes":[],"Package":"HDBC-2.3.1.1"},{"Name":"conn","HType":"v","Pos":[87,12,16],"GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":"","AllTypes":[],"Package":""},{"Name":"disconnect","HType":"v","Pos":[88,5,15],"GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection -> GHC.Types.IO ()","Type":"IConnection Connection => Connection -> IO ()","Module":"Database.HDBC.Types","AllTypes":[],"Package":"HDBC-2.3.1.1"},{"Name":"conn","HType":"v","Pos":[88,16,20],"GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":"","AllTypes":[],"Package":""},{"Name":"getAllWords","HType":"v","Pos":[77,1,81,54],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"conn","HType":"v","Pos":[78,5,9],"GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":"","AllTypes":[],"Package":""},{"Name":"connectSqlite3","HType":"v","Pos":[78,13,27],"GType":"Var","QType":"GHC.IO.FilePath\n-> GHC.Types.IO Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"FilePath -> IO Connection","Module":"Database.HDBC.Sqlite3.Connection","AllTypes":[],"Package":"HDBC-sqlite3-2.3.3.0"},{"Name":"r","HType":"v","Pos":[79,5],"GType":"Var","QType":"[[Database.HDBC.SqlValue.SqlValue]]","Type":"[[SqlValue]]","Module":"","AllTypes":[],"Package":""},{"Name":"quickQuery'","HType":"v","Pos":[79,10,21],"GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection\n-> GHC.Base.String\n-> [Database.HDBC.SqlValue.SqlValue]\n-> GHC.Types.IO [[Database.HDBC.SqlValue.SqlValue]]","Type":"IConnection Connection =>\nConnection -> String -> [SqlValue] -> IO [[SqlValue]]","Module":"Database.HDBC.Utils","AllTypes":[],"Package":"HDBC-2.3.1.1"},{"Name":"conn","HType":"v","Pos":[79,22,26],"GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":"","AllTypes":[],"Package":""},{"Name":"[]","HType":"v","Pos":[79,77,79],"GType":"Var","QType":"[Database.HDBC.SqlValue.SqlValue]","Type":"[SqlValue]","Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"disconnect","HType":"v","Pos":[80,5,15],"GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection -> GHC.Types.IO ()","Type":"IConnection Connection => Connection -> IO ()","Module":"Database.HDBC.Types","AllTypes":[],"Package":"HDBC-2.3.1.1"},{"Name":"conn","HType":"v","Pos":[80,16,20],"GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":"","AllTypes":[],"Package":""},{"Name":"return","HType":"v","Pos":[81,5,11],"GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"$","HType":"v","Pos":[81,12],"GType":"Var","QType":"forall a b. (a -> b) -> a -> b [GHC.Base.String] (GHC.Types.IO\n                                                    [GHC.Base.String])","Type":"forall a b. (a -> b) -> a -> b [String] (IO [String])","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"map","HType":"v","Pos":[81,14,17],"GType":"Var","QType":"forall a b.\n(a -> b)\n-> [a] -> [b] [Database.HDBC.SqlValue.SqlValue] GHC.Base.String","Type":"forall a b. (a -> b) -> [a] -> [b] [SqlValue] String","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"x","HType":"v","Pos":[81,20],"GType":"Var","QType":"[Database.HDBC.SqlValue.SqlValue]","Type":"[SqlValue]","Module":"","AllTypes":[],"Package":""},{"Name":"fromSql","HType":"v","Pos":[81,25,32],"GType":"Var","QType":"Data.Convertible.Base.Convertible\n  Database.HDBC.SqlValue.SqlValue GHC.Base.String =>\nDatabase.HDBC.SqlValue.SqlValue -> GHC.Base.String","Type":"Convertible SqlValue String => SqlValue -> String","Module":"Database.HDBC.SqlValue","AllTypes":[],"Package":"HDBC-2.3.1.1"},{"Name":"$","HType":"v","Pos":[81,33],"GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b Database.HDBC.SqlValue.SqlValue GHC.Base.String","Type":"forall a b. (a -> b) -> a -> b SqlValue String","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"head","HType":"v","Pos":[81,35,39],"GType":"Var","QType":"[Database.HDBC.SqlValue.SqlValue]\n-> Database.HDBC.SqlValue.SqlValue","Type":"[SqlValue] -> SqlValue","Module":"GHC.List","AllTypes":[],"Package":"base"},{"Name":"x","HType":"v","Pos":[81,40],"GType":"Var","QType":"[Database.HDBC.SqlValue.SqlValue]","Type":"[SqlValue]","Module":"","AllTypes":[],"Package":""},{"Name":"String","HType":"t","Pos":[81,45,51],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"r","HType":"v","Pos":[81,53],"GType":"Var","QType":"[[Database.HDBC.SqlValue.SqlValue]]","Type":"[[SqlValue]]","Module":"","AllTypes":[],"Package":""},{"Name":"decrypt","HType":"v","Pos":[67,1,20],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"[]","HType":"v","Pos":[67,13,15],"GType":"DataCon","QType":"forall a. [a]","Type":"forall a. [a]","Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"[]","HType":"v","Pos":[67,18,20],"GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"decrypt","HType":"v","Pos":[68,1,73,39],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"dictkey","HType":"v","Pos":[68,9,16],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"i","HType":"v","Pos":[68,17],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":":","HType":"v","Pos":[68,24],"GType":"DataCon","QType":"forall a. a -> [a] -> [a]","Type":"forall a. a -> [a] -> [a]","Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"char","HType":"v","Pos":[68,20,24],"GType":"Var","QType":"GHC.Types.Char","Type":"Char","Module":"","AllTypes":[],"Package":""},{"Name":"xs","HType":"v","Pos":[68,25,27],"GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":"","AllTypes":[],"Package":""},{"Name":"c","HType":"v","Pos":[69,9,21],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"ord","HType":"v","Pos":[69,13,16],"GType":"Var","QType":"GHC.Types.Char -> GHC.Types.Int","Type":"Char -> Int","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"char","HType":"v","Pos":[69,17,21],"GType":"Var","QType":"GHC.Types.Char","Type":"Char","Module":"","AllTypes":[],"Package":""},{"Name":"code","HType":"v","Pos":[70,9,72,41],"GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":"","AllTypes":[],"Package":""},{"Name":"i","HType":"v","Pos":[70,21],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"mod","HType":"v","Pos":[70,23,28],"GType":"Var","QType":"GHC.Real.Integral GHC.Types.Int =>\nGHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int","Type":"Integral Int => Int -> Int -> Int","Module":"GHC.Real","AllTypes":[],"Package":"base"},{"Name":"fromInteger","HType":"v","Pos":[70,29],"GType":"Var","QType":"GHC.Num.Num GHC.Types.Int =>\nGHC.Integer.Type.Integer -> GHC.Types.Int","Type":"Num Int => Integer -> Int","Module":"GHC.Num","AllTypes":[],"Package":"base"},{"Name":"chr","HType":"v","Pos":[71,19,22],"GType":"Var","QType":"GHC.Types.Int -> GHC.Types.Char","Type":"Int -> Char","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"$","HType":"v","Pos":[71,23],"GType":"Var","QType":"forall a b. (a -> b) -> a -> b GHC.Types.Int GHC.Types.Char","Type":"forall a b. (a -> b) -> a -> b Int Char","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"complement","HType":"v","Pos":[71,26,36],"GType":"Var","QType":"Data.Bits.Bits GHC.Types.Int => GHC.Types.Int -> GHC.Types.Int","Type":"Bits Int => Int -> Int","Module":"Data.Bits","AllTypes":[],"Package":"base"},{"Name":"c","HType":"v","Pos":[71,37],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":".&.","HType":"v","Pos":[71,40,43],"GType":"Var","QType":"Data.Bits.Bits GHC.Types.Int =>\nGHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int","Type":"Bits Int => Int -> Int -> Int","Module":"Data.Bits","AllTypes":[],"Package":"base"},{"Name":"fromInteger","HType":"v","Pos":[71,44,48],"GType":"Var","QType":"GHC.Num.Num GHC.Types.Int =>\nGHC.Integer.Type.Integer -> GHC.Types.Int","Type":"Num Int => Integer -> Int","Module":"GHC.Num","AllTypes":[],"Package":"base"},{"Name":"chr","HType":"v","Pos":[72,19,22],"GType":"Var","QType":"GHC.Types.Int -> GHC.Types.Char","Type":"Int -> Char","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"$","HType":"v","Pos":[72,23],"GType":"Var","QType":"forall a b. (a -> b) -> a -> b GHC.Types.Int GHC.Types.Char","Type":"forall a b. (a -> b) -> a -> b Int Char","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"c","HType":"v","Pos":[72,25],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"xor","HType":"v","Pos":[72,27,32],"GType":"Var","QType":"Data.Bits.Bits GHC.Types.Int =>\nGHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int","Type":"Bits Int => Int -> Int -> Int","Module":"Data.Bits","AllTypes":[],"Package":"base"},{"Name":"dictkey","HType":"v","Pos":[72,33,40],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"code","HType":"v","Pos":[73,5,9],"GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":"","AllTypes":[],"Package":""},{"Name":"++","HType":"v","Pos":[73,10,12],"GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"decrypt","HType":"v","Pos":[73,14,21],"GType":"Var","QType":"GHC.Types.Int\n-> GHC.Types.Int -> GHC.Base.String -> GHC.Base.String","Type":"Int -> Int -> String -> String","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"dictkey","HType":"v","Pos":[73,22,29],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"i","HType":"v","Pos":[73,31],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"+","HType":"v","Pos":[73,32],"GType":"Var","QType":"GHC.Num.Num GHC.Types.Int =>\nGHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int","Type":"Num Int => Int -> Int -> Int","Module":"GHC.Num","AllTypes":[],"Package":"base"},{"Name":"fromInteger","HType":"v","Pos":[73,33],"GType":"Var","QType":"GHC.Num.Num GHC.Types.Int =>\nGHC.Integer.Type.Integer -> GHC.Types.Int","Type":"Num Int => Integer -> Int","Module":"GHC.Num","AllTypes":[],"Package":"base"},{"Name":"xs","HType":"v","Pos":[73,36,38],"GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":"","AllTypes":[],"Package":""},{"Name":"head'","HType":"v","Pos":[20,1,22,19],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"xs","HType":"v","Pos":[20,7,9],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"xs","HType":"v","Pos":[20,17,19],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"[]","HType":"v","Pos":[21,9,11],"GType":"DataCon","QType":"forall a. [a]","Type":"forall a. [a]","Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":":","HType":"v","Pos":[22,11],"GType":"DataCon","QType":"forall a. a -> [a] -> [a]","Type":"forall a. a -> [a] -> [a]","Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"x","HType":"v","Pos":[22,10],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"x","HType":"v","Pos":[22,18],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"getDictKey","HType":"v","Pos":[52,1,54,31],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"tokenjs","HType":"v","Pos":[52,12,19],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"matchs","HType":"v","Pos":[53,22,28],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"tokenjs","HType":"v","Pos":[53,32,39],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"=~","HType":"v","Pos":[53,40,42],"GType":"Var","QType":"forall source source1 target.\n(Text.Regex.Base.RegexLike.RegexMaker\n   Text.Regex.Posix.Wrap.Regex\n   Text.Regex.Posix.Wrap.CompOption\n   Text.Regex.Posix.Wrap.ExecOption\n   source,\n Text.Regex.Base.RegexLike.RegexContext\n   Text.Regex.Posix.Wrap.Regex source1 target) =>\nsource1\n-> source\n-> target GHC.Base.String GHC.Base.String (GHC.Base.String,\n                                           GHC.Base.String,\n                                           GHC.Base.String,\n                                           [GHC.Base.String])","Type":"forall source source1 target.\n(RegexMaker Regex CompOption ExecOption source,\n RegexContext Regex source1 target) =>\nsource1 -> source -> target String String (String,\n                                           String,\n                                           String,\n                                           [String])","Module":"Text.Regex.Posix.Wrap","AllTypes":[],"Package":"regex-posix-0.95.1"},{"Name":"String","HType":"t","Pos":[53,70,76],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[53,82,88],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[53,89,95],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[53,96,102],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[53,104,110],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"read","HType":"v","Pos":[54,5,9],"GType":"Var","QType":"GHC.Read.Read GHC.Types.Int => GHC.Base.String -> GHC.Types.Int","Type":"Read Int => String -> Int","Module":"Text.Read","AllTypes":[],"Package":"base"},{"Name":"head'","HType":"v","Pos":[54,11,16],"GType":"Var","QType":"[GHC.Base.String] -> GHC.Base.String","Type":"[String] -> String","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"matchs","HType":"v","Pos":[54,17,23],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"Int","HType":"t","Pos":[54,28,31],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"getDictData","HType":"v","Pos":[58,1,63,50],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"datajs","HType":"v","Pos":[58,13,19],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"datamatchs","HType":"v","Pos":[59,22,32],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"datajs","HType":"v","Pos":[59,36,42],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"=~","HType":"v","Pos":[59,43,45],"GType":"Var","QType":"forall source source1 target.\n(Text.Regex.Base.RegexLike.RegexMaker\n   Text.Regex.Posix.Wrap.Regex\n   Text.Regex.Posix.Wrap.CompOption\n   Text.Regex.Posix.Wrap.ExecOption\n   source,\n Text.Regex.Base.RegexLike.RegexContext\n   Text.Regex.Posix.Wrap.Regex source1 target) =>\nsource1\n-> source\n-> target GHC.Base.String GHC.Base.String (GHC.Base.String,\n                                           GHC.Base.String,\n                                           GHC.Base.String,\n                                           [GHC.Base.String])","Type":"forall source source1 target.\n(RegexMaker Regex CompOption ExecOption source,\n RegexContext Regex source1 target) =>\nsource1 -> source -> target String String (String,\n                                           String,\n                                           String,\n                                           [String])","Module":"Text.Regex.Posix.Wrap","AllTypes":[],"Package":"regex-posix-0.95.1"},{"Name":"String","HType":"t","Pos":[59,83,89],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[59,95,101],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[59,102,108],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[59,109,115],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[59,117,123],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"datajs'","HType":"v","Pos":[60,9,63],"GType":"Var","QType":"Text.JSON.Result Text.JSON.Types.JSString","Type":"Result JSString","Module":"","AllTypes":[],"Package":""},{"Name":"decode","HType":"v","Pos":[60,19,25],"GType":"Var","QType":"Text.JSON.JSON Text.JSON.Types.JSString =>\nGHC.Base.String -> Text.JSON.Result Text.JSON.Types.JSString","Type":"JSON JSString => String -> Result JSString","Module":"Text.JSON","AllTypes":[],"Package":"json-0.5"},{"Name":"head'","HType":"v","Pos":[60,27,32],"GType":"Var","QType":"[GHC.Base.String] -> GHC.Base.String","Type":"[String] -> String","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"datamatchs","HType":"v","Pos":[60,33,43],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"Result","HType":"t","Pos":[60,48,54],"GType":"Name","QType":null,"Type":null,"Module":"Text.JSON","AllTypes":[],"Package":"json-0.5"},{"Name":"JSString","HType":"t","Pos":[60,55,63],"GType":"Name","QType":null,"Type":null,"Module":"Text.JSON.Types","AllTypes":[],"Package":"json-0.5"},{"Name":"datajs'","HType":"v","Pos":[61,10,17],"GType":"Var","QType":"Text.JSON.Result Text.JSON.Types.JSString","Type":"Result JSString","Module":"","AllTypes":[],"Package":""},{"Name":"Error","HType":"v","Pos":[62,9,14],"GType":"DataCon","QType":"forall a. GHC.Base.String -> Text.JSON.Result a","Type":"forall a. String -> Result a","Module":"Text.JSON","AllTypes":[],"Package":"json-0.5"},{"Name":"Nothing","HType":"v","Pos":[62,20,27],"GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"Ok","HType":"v","Pos":[63,9,11],"GType":"DataCon","QType":"forall a. a -> Text.JSON.Result a","Type":"forall a. a -> Result a","Module":"Text.JSON","AllTypes":[],"Package":"json-0.5"},{"Name":"jsvalue","HType":"v","Pos":[63,12,19],"GType":"Var","QType":"Text.JSON.Types.JSString","Type":"JSString","Module":"","AllTypes":[],"Package":""},{"Name":"Just","HType":"v","Pos":[63,23,27],"GType":"Var","QType":"GHC.Base.String -> Data.Maybe.Maybe GHC.Base.String","Type":"String -> Maybe String","Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"fromJSString","HType":"v","Pos":[63,29,41],"GType":"Var","QType":"Text.JSON.Types.JSString -> GHC.Base.String","Type":"JSString -> String","Module":"Text.JSON.Types","AllTypes":[],"Package":"json-0.5"},{"Name":"jsvalue","HType":"v","Pos":[63,42,49],"GType":"Var","QType":"Text.JSON.Types.JSString","Type":"JSString","Module":"","AllTypes":[],"Package":""},{"Name":"getContent","HType":"v","Pos":[26,1,48,49],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"word","HType":"v","Pos":[26,12,16],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"catch","HType":"v","Pos":[26,19,26],"GType":"Var","QType":"forall e a.\nGHC.Exception.Exception e =>\nGHC.Types.IO a\n-> (e -> GHC.Types.IO a)\n-> GHC.Types.IO a GHC.Exception.SomeException ()","Type":"forall e a.\nException e =>\nIO a -> (e -> IO a) -> IO a SomeException ()","Module":"Control.Exception.Base","AllTypes":[],"Package":"base"},{"Name":"print","HType":"v","Pos":[27,5,10],"GType":"Var","QType":"GHC.Show.Show [GHC.Types.Char] =>\n[GHC.Types.Char] -> GHC.Types.IO ()","Type":"Show [Char] => [Char] -> IO ()","Module":"System.IO","AllTypes":[],"Package":"base"},{"Name":"$","HType":"v","Pos":[27,11],"GType":"Var","QType":"forall a b. (a -> b) -> a -> b [GHC.Types.Char] (GHC.Types.IO ())","Type":"forall a b. (a -> b) -> a -> b [Char] (IO ())","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"++","HType":"v","Pos":[27,25,27],"GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"word","HType":"v","Pos":[27,28,32],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"++","HType":"v","Pos":[27,33,35],"GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"content","HType":"v","Pos":[28,5,12],"GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":"","AllTypes":[],"Package":""},{"Name":"runMaybeT","HType":"v","Pos":[28,16,25],"GType":"Var","QType":"forall (m :: * -> *) a.\nControl.Monad.Maybe.MaybeT m a\n-> m (Data.Maybe.Maybe a) GHC.Types.IO GHC.Base.String","Type":"forall (m :: * -> *) a. MaybeT m a -> m (Maybe a) IO String","Module":"Control.Monad.Maybe","AllTypes":[],"Package":"MaybeT-0.1.2"},{"Name":"$","HType":"v","Pos":[28,26],"GType":"Var","QType":"forall a b. (a -> b) -> a -> b (Control.Monad.Maybe.MaybeT\n                                  GHC.Types.IO GHC.Base.String) (GHC.Types.IO\n                                                                   (Data.Maybe.Maybe\n                                                                      GHC.Base.String))","Type":"forall a b. (a -> b) -> a -> b (MaybeT IO String) (IO\n                                                     (Maybe String))","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"openUrl","HType":"v","Pos":[28,28,35],"GType":"Var","QType":"GHC.Base.String\n-> Control.Monad.Maybe.MaybeT GHC.Types.IO GHC.Base.String","Type":"String -> MaybeT IO String","Module":"Text.HandsomeSoup","AllTypes":[],"Package":"HandsomeSoup-0.3.1"},{"Name":"$","HType":"v","Pos":[28,36],"GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b GHC.Base.String (Control.Monad.Maybe.MaybeT\n                                      GHC.Types.IO GHC.Base.String)","Type":"forall a b. (a -> b) -> a -> b String (MaybeT IO String)","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"++","HType":"v","Pos":[28,56,58],"GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"urlEncode","HType":"v","Pos":[28,59,68],"GType":"Var","QType":"GHC.Base.String -> GHC.Base.String","Type":"String -> String","Module":"Network.HTTP.Base","AllTypes":[],"Package":"HTTP-4000.2.2"},{"Name":"word","HType":"v","Pos":[28,69,73],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"content","HType":"v","Pos":[29,10,17],"GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":"","AllTypes":[],"Package":""},{"Name":"Nothing","HType":"v","Pos":[30,9,16],"GType":"DataCon","QType":"forall a. Data.Maybe.Maybe a","Type":"forall a. Maybe a","Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"putStrLn","HType":"v","Pos":[30,20,28],"GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"System.IO","AllTypes":[],"Package":"base"},{"Name":"Just","HType":"v","Pos":[31,9,13],"GType":"DataCon","QType":"forall a. a -> Data.Maybe.Maybe a","Type":"forall a. a -> Maybe a","Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"content'","HType":"v","Pos":[31,14,22],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"doc","HType":"v","Pos":[32,17,94],"GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"IOStateArrow s b XmlTree","Module":"","AllTypes":[],"Package":""},{"Name":"readString","HType":"v","Pos":[32,23,33],"GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.SysConfigList\n-> GHC.Base.String\n-> Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n     s b Text.XML.HXT.DOM.TypeDefs.XmlTree s b","Type":"forall s b. SysConfigList -> String -> IOStateArrow s b XmlTree s b","Module":"Text.XML.HXT.Arrow.ReadDocument","AllTypes":[],"Package":"hxt-9.2.2"},{"Name":"withParseHTML","HType":"v","Pos":[32,35,48],"GType":"Var","QType":"GHC.Types.Bool -> Text.XML.HXT.Arrow.XmlState.TypeDefs.SysConfig","Type":"Bool -> SysConfig","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig","AllTypes":[],"Package":"hxt-9.2.2"},{"Name":"yes","HType":"v","Pos":[32,49,52],"GType":"Var","QType":"GHC.Types.Bool","Type":"Bool","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig","AllTypes":[],"Package":"hxt-9.2.2"},{"Name":"withWarnings","HType":"v","Pos":[32,54,66],"GType":"Var","QType":"GHC.Types.Bool -> Text.XML.HXT.Arrow.XmlState.TypeDefs.SysConfig","Type":"Bool -> SysConfig","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig","AllTypes":[],"Package":"hxt-9.2.2"},{"Name":"no","HType":"v","Pos":[32,67,69],"GType":"Var","QType":"GHC.Types.Bool","Type":"Bool","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig","AllTypes":[],"Package":"hxt-9.2.2"},{"Name":"$","HType":"v","Pos":[32,71],"GType":"Var","QType":"forall a b.\n(a -> b)\n-> a\n-> b GHC.Base.String (Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n                        s b Text.XML.HXT.DOM.TypeDefs.XmlTree)","Type":"forall a b. (a -> b) -> a -> b String (IOStateArrow s b XmlTree)","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"decodeString","HType":"v","Pos":[32,73,85],"GType":"Var","QType":"GHC.Base.String -> GHC.Base.String","Type":"String -> String","Module":"Codec.Binary.UTF8.String","AllTypes":[],"Package":"utf8-string-0.3.7"},{"Name":"content'","HType":"v","Pos":[32,86,94],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"tokenjssrc","HType":"v","Pos":[34,13,23],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"runX","HType":"v","Pos":[34,27,31],"GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n  Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String\n-> GHC.Types.IO [GHC.Base.String]","Type":"IOSArrow XmlTree String -> IO [String]","Module":"Text.XML.HXT.Arrow.XmlState.RunIOStateArrow","AllTypes":[],"Package":"hxt-9.2.2"},{"Name":"$","HType":"v","Pos":[34,32],"GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b (Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n                      Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String) (GHC.Types.IO\n                                                                            [GHC.Base.String])","Type":"forall a b. (a -> b) -> a -> b (IOSArrow XmlTree String) (IO\n                                                            [String])","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"doc","HType":"v","Pos":[34,34,37],"GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s\n  b\n  Text.XML.HXT.DOM.TypeDefs.XmlTree () Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree () XmlTree","Module":"","AllTypes":[],"Package":""},{"Name":">>>","HType":"v","Pos":[34,38,41],"GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA\n                                 (XIOState ())) XmlTree XmlTree String","Module":"Control.Category","AllTypes":[],"Package":"base"},{"Name":"css","HType":"v","Pos":[34,42,45],"GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup","AllTypes":[],"Package":"HandsomeSoup-0.3.1"},{"Name":">>>","HType":"v","Pos":[35,38,41],"GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree (Data.Tree.NTree.TypeDefs.NTree\n                                                                              Text.XML.HXT.DOM.TypeDefs.XNode) GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) XmlTree (NTree\n                                                               XNode) String","Module":"Control.Category","AllTypes":[],"Package":"base"},{"Name":"hasAttrValue","HType":"v","Pos":[35,42,54],"GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nGHC.Base.String\n-> (GHC.Base.String -> GHC.Types.Bool)\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"ArrowXml (IOSLA (XIOState ())) =>\nString -> (String -> Bool) -> IOSLA (XIOState ()) XmlTree XmlTree","Module":"Text.XML.HXT.Arrow.XmlArrow","AllTypes":[],"Package":"hxt-9.2.2"},{"Name":"==","HType":"v","Pos":[35,61,63],"GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes","AllTypes":[],"Package":"ghc-prim"},{"Name":"!","HType":"v","Pos":[35,76],"GType":"Var","QType":"forall (cat :: * -> * -> *) a.\nText.XML.HXT.Arrow.XmlArrow.ArrowXml cat =>\ncat a Text.XML.HXT.DOM.TypeDefs.XmlTree\n-> GHC.Base.String\n-> cat a GHC.Base.String (Control.Arrow.IOStateListArrow.IOSLA\n                            (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                               ())) (Data.Tree.NTree.TypeDefs.NTree\n                                       Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"forall (cat :: * -> * -> *) a.\nArrowXml cat =>\ncat a XmlTree -> String -> cat a String (IOSLA\n                                           (XIOState ())) (NTree XNode)","Module":"Text.HandsomeSoup","AllTypes":[],"Package":"HandsomeSoup-0.3.1"},{"Name":"tokenjs","HType":"v","Pos":[36,13,20],"GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":"","AllTypes":[],"Package":""},{"Name":"runMaybeT","HType":"v","Pos":[36,24,33],"GType":"Var","QType":"forall (m :: * -> *) a.\nControl.Monad.Maybe.MaybeT m a\n-> m (Data.Maybe.Maybe a) GHC.Types.IO GHC.Base.String","Type":"forall (m :: * -> *) a. MaybeT m a -> m (Maybe a) IO String","Module":"Control.Monad.Maybe","AllTypes":[],"Package":"MaybeT-0.1.2"},{"Name":"$","HType":"v","Pos":[36,34],"GType":"Var","QType":"forall a b. (a -> b) -> a -> b (Control.Monad.Maybe.MaybeT\n                                  GHC.Types.IO GHC.Base.String) (GHC.Types.IO\n                                                                   (Data.Maybe.Maybe\n                                                                      GHC.Base.String))","Type":"forall a b. (a -> b) -> a -> b (MaybeT IO String) (IO\n                                                     (Maybe String))","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"openUrl","HType":"v","Pos":[36,36,43],"GType":"Var","QType":"GHC.Base.String\n-> Control.Monad.Maybe.MaybeT GHC.Types.IO GHC.Base.String","Type":"String -> MaybeT IO String","Module":"Text.HandsomeSoup","AllTypes":[],"Package":"HandsomeSoup-0.3.1"},{"Name":"$","HType":"v","Pos":[36,44],"GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b GHC.Base.String (Control.Monad.Maybe.MaybeT\n                                      GHC.Types.IO GHC.Base.String)","Type":"forall a b. (a -> b) -> a -> b String (MaybeT IO String)","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"++","HType":"v","Pos":[36,63,65],"GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"head'","HType":"v","Pos":[36,66,71],"GType":"Var","QType":"[GHC.Base.String] -> GHC.Base.String","Type":"[String] -> String","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"tokenjssrc","HType":"v","Pos":[36,72,82],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"tokenjs","HType":"v","Pos":[37,18,25],"GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":"","AllTypes":[],"Package":""},{"Name":"Nothing","HType":"v","Pos":[38,17,24],"GType":"DataCon","QType":"forall a. Data.Maybe.Maybe a","Type":"forall a. Maybe a","Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"putStrLn","HType":"v","Pos":[38,28,36],"GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"System.IO","AllTypes":[],"Package":"base"},{"Name":"Just","HType":"v","Pos":[39,17,21],"GType":"DataCon","QType":"forall a. a -> Data.Maybe.Maybe a","Type":"forall a. a -> Maybe a","Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"tokenjs'","HType":"v","Pos":[39,22,30],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"getDictData","HType":"v","Pos":[39,39,50],"GType":"Var","QType":"GHC.Base.String -> Data.Maybe.Maybe GHC.Base.String","Type":"String -> Maybe String","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"content'","HType":"v","Pos":[39,51,59],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"Nothing","HType":"v","Pos":[40,25,32],"GType":"DataCon","QType":"forall a. Data.Maybe.Maybe a","Type":"forall a. Maybe a","Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"putStrLn","HType":"v","Pos":[40,36,44],"GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"System.IO","AllTypes":[],"Package":"base"},{"Name":"Just","HType":"v","Pos":[41,25,29],"GType":"DataCon","QType":"forall a. a -> Data.Maybe.Maybe a","Type":"forall a. a -> Maybe a","Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"dictdata","HType":"v","Pos":[41,30,38],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"dictkey","HType":"v","Pos":[42,33,62],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"getDictKey","HType":"v","Pos":[42,43,53],"GType":"Var","QType":"GHC.Base.String -> GHC.Types.Int","Type":"String -> Int","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"tokenjs'","HType":"v","Pos":[42,54,62],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"result","HType":"v","Pos":[43,33,68],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"decrypt","HType":"v","Pos":[43,42,49],"GType":"Var","QType":"GHC.Types.Int\n-> GHC.Types.Int -> GHC.Base.String -> GHC.Base.String","Type":"Int -> Int -> String -> String","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"dictkey","HType":"v","Pos":[43,50,57],"GType":"Var","QType":"GHC.Types.Int","Type":"Int","Module":"","AllTypes":[],"Package":""},{"Name":"fromInteger","HType":"v","Pos":[43,58],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Num","AllTypes":[],"Package":"base"},{"Name":"dictdata","HType":"v","Pos":[43,60,68],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"updateDB","HType":"v","Pos":[44,29,37],"GType":"Var","QType":"GHC.Base.String -> GHC.Base.String -> GHC.Types.IO ()","Type":"String -> String -> IO ()","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"word","HType":"v","Pos":[44,38,42],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"result","HType":"v","Pos":[44,43,49],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"print","HType":"v","Pos":[45,29,34],"GType":"Var","QType":"GHC.Show.Show [GHC.Types.Char] =>\n[GHC.Types.Char] -> GHC.Types.IO ()","Type":"Show [Char] => [Char] -> IO ()","Module":"System.IO","AllTypes":[],"Package":"base"},{"Name":"$","HType":"v","Pos":[45,35],"GType":"Var","QType":"forall a b. (a -> b) -> a -> b [GHC.Types.Char] (GHC.Types.IO ())","Type":"forall a b. (a -> b) -> a -> b [Char] (IO ())","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"++","HType":"v","Pos":[45,41,43],"GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"word","HType":"v","Pos":[45,44,48],"GType":"Var","QType":"GHC.Base.String","Type":"String","Module":"","AllTypes":[],"Package":""},{"Name":"++","HType":"v","Pos":[45,49,51],"GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"handler","HType":"v","Pos":[46,7,14],"GType":"Var","QType":"GHC.Exception.SomeException -> GHC.Types.IO ()","Type":"SomeException -> IO ()","Module":"","AllTypes":[],"Package":""},{"Name":"handler","HType":"v","Pos":[48,9,49],"GType":"Var","QType":"GHC.Exception.SomeException -> GHC.Types.IO ()","Type":"SomeException -> IO ()","Module":"","AllTypes":[],"Package":""},{"Name":"e","HType":"v","Pos":[48,17],"GType":"Var","QType":"GHC.Exception.SomeException","Type":"SomeException","Module":"","AllTypes":[],"Package":""},{"Name":"print","HType":"v","Pos":[48,21,26],"GType":"Var","QType":"GHC.Show.Show GHC.Exception.SomeException =>\nGHC.Exception.SomeException -> GHC.Types.IO ()","Type":"Show SomeException => SomeException -> IO ()","Module":"System.IO","AllTypes":[],"Package":"base"},{"Name":"e","HType":"v","Pos":[48,28],"GType":"Var","QType":"GHC.Exception.SomeException","Type":"SomeException","Module":"","AllTypes":[],"Package":""},{"Name":"SomeException","HType":"t","Pos":[48,33,48],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Exception","AllTypes":[],"Package":"base"},{"Name":"dictScrape","HType":"v","Pos":[91,1,94,19],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"allWords","HType":"v","Pos":[92,5,13],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"getAllWords","HType":"v","Pos":[92,17,28],"GType":"Var","QType":"GHC.Types.IO [GHC.Base.String]","Type":"IO [String]","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"parallel_","HType":"v","Pos":[93,5,14],"GType":"Var","QType":"[GHC.Types.IO ()] -> GHC.Types.IO ()","Type":"[IO ()] -> IO ()","Module":"Control.Concurrent.ParallelIO.Global","AllTypes":[],"Package":"parallel-io-0.3.2"},{"Name":"$","HType":"v","Pos":[93,15],"GType":"Var","QType":"forall a b. (a -> b) -> a -> b [GHC.Types.IO ()] (GHC.Types.IO ())","Type":"forall a b. (a -> b) -> a -> b [IO ()] (IO ())","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"map","HType":"v","Pos":[93,17,20],"GType":"Var","QType":"forall a b. (a -> b) -> [a] -> [b] GHC.Base.String (GHC.Types.IO\n                                                      ())","Type":"forall a b. (a -> b) -> [a] -> [b] String (IO ())","Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"getContent","HType":"v","Pos":[93,21,31],"GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"allWords","HType":"v","Pos":[93,32,40],"GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"","AllTypes":[],"Package":""},{"Name":"stopGlobalPool","HType":"v","Pos":[94,5,19],"GType":"Var","QType":"GHC.Types.IO ()","Type":"IO ()","Module":"Control.Concurrent.ParallelIO.Global","AllTypes":[],"Package":"parallel-io-0.3.2"},{"Name":"dictScrape","HType":"v","Pos":[90,1,11],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"IO","HType":"t","Pos":[90,15,17],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"()","HType":"t","Pos":[90,18,20],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Tuple","AllTypes":[],"Package":"ghc-prim"},{"Name":"updateDB","HType":"v","Pos":[83,1,9],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"String","HType":"t","Pos":[83,13,19],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[83,23,29],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"IO","HType":"t","Pos":[83,33,35],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"()","HType":"t","Pos":[83,36,38],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Tuple","AllTypes":[],"Package":"ghc-prim"},{"Name":"getAllWords","HType":"v","Pos":[76,1,12],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"IO","HType":"t","Pos":[76,16,18],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"String","HType":"t","Pos":[76,20,26],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"decrypt","HType":"v","Pos":[66,1,8],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"Int","HType":"t","Pos":[66,12,15],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"Int","HType":"t","Pos":[66,19,22],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"String","HType":"t","Pos":[66,26,32],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[66,36,42],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"getDictData","HType":"v","Pos":[57,1,12],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"String","HType":"t","Pos":[57,16,22],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"Maybe","HType":"t","Pos":[57,26,31],"GType":"Name","QType":null,"Type":null,"Module":"Data.Maybe","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[57,32,38],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"getDictKey","HType":"v","Pos":[51,1,11],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"String","HType":"t","Pos":[51,15,21],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"Int","HType":"t","Pos":[51,25,28],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"getContent","HType":"v","Pos":[25,1,11],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"String","HType":"t","Pos":[25,15,21],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"IO","HType":"t","Pos":[25,25,27],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Types","AllTypes":[],"Package":"ghc-prim"},{"Name":"()","HType":"t","Pos":[25,28,30],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Tuple","AllTypes":[],"Package":"ghc-prim"},{"Name":"head'","HType":"v","Pos":[19,1,6],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"},{"Name":"String","HType":"t","Pos":[19,11,17],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"String","HType":"t","Pos":[19,22,28],"GType":"Name","QType":null,"Type":null,"Module":"GHC.Base","AllTypes":[],"Package":"base"},{"Name":"decodeString","HType":"v","Pos":[5,34,46],"GType":"Name","QType":null,"Type":null,"Module":"Codec.Binary.UTF8.String","AllTypes":[],"Package":"utf8-string-0.3.7"},{"Name":"dictScrape","HType":"v","Pos":[3,23,33],"GType":"Name","QType":null,"Type":null,"Module":"DictCNScraper","AllTypes":[],"Package":"main"}],"BuildFlags":[{"a":["-package-conf","/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/package.conf.inplace","-hide-all-packages","-fbuilding-cabal-package","-i","-i/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-isrc","-i/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/build/autogen","-I/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/build/autogen","-I/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-optP-include","-optP/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/build/autogen/cabal_macros.h","-odir","/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-hidir","/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-stubdir","/home/jon/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-package-id","HDBC-2.3.1.1-9c9a90f048d4b5261389289d786dd7ef","-package-id","HDBC-sqlite3-2.3.3.0-2f7c34193db2d0721447653bbbe9d00f","-package-id","HTTP-4000.2.2-962e29da1b724490d80fc60cb9d107ba","-package-id","HandsomeSoup-0.3.1-c461280b02d89635bdc4da0f2e4f4af2","-package-id","MaybeT-0.1.2-3cddee0cf4a29d0a1544924d109f5fa8","-package-id","base-4.5.0.0-c8e7184681d410015e93df85fc49e9dd","-package-id","bytestring-0.9.2.1-4adca9710b1386944aaca5a7886ef98f","-package-id","containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd","-package-id","hexpat-0.20.1-e8feac5a2437ca1e8025d523964e04fe","-package-id","hxt-9.2.2-5b143bfbe28c7a2714aea2c97f13ff35","-package-id","json-0.5-95bdbc43daf81b2bce0748d1aaa9c3a3","-package-id","old-time-1.1.0.0-681e9789e8750358e65a9448b60ba641","-package-id","parallel-io-0.3.2-3fc61a2133d99349cc5862070d25801c","-package-id","regex-posix-0.95.1-2f35aa9df8123324048818907dfda5d0","-package-id","tagsoup-0.12.6-57ca8a2db7339ea6237481f4729e5e0f","-package-id","text-0.11.1.13-501afa4d95a2591bf1e0d0a57dc80a38","-package-id","utf8-string-0.3.7-528cea24d4cad2c1cb19a75d1ad8976c","-Wall","-fno-warn-unused-do-bind","-XHaskell98"],"p":["-D__GLASGOW_HASKELL__=704"],"m":"DictCNScraper"},[]]}