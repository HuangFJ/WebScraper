{"AST":{"Bag(Located (HsBind Var))":[[{"SrcSpan":[{"column":1,"line":111},{"column":25,"line":130}]},[[{"Name":"concatSql","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])\n-> [(GHC.Base.String, GHC.Base.String)]\n-> (GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])\n-> [(String, String)] -> (String, String, [String])","Module":"VOAScraper"},{"Name":"concatSql","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])\n-> [(GHC.Base.String, GHC.Base.String)]\n-> (GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])\n-> [(String, String)] -> (String, String, [String])","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":111},{"column":25,"line":130}]},[[{"SrcSpan":[{"column":1,"line":111},{"column":10,"line":111}]},{"Name":"concatSql","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])\n-> [(GHC.Base.String, GHC.Base.String)]\n-> (GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])\n-> [(String, String)] -> (String, String, [String])","Module":""}],[[{"SrcSpan":[{"column":1,"line":111},{"column":36,"line":129}]},[[[{"SrcSpan":[{"column":11,"line":111},{"column":15,"line":111}]},{"Name":"cond","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])","Module":""}],[{"SrcSpan":[{"column":16,"line":111},{"column":22,"line":111}]},[{"SrcSpan":[{"column":17,"line":111},{"column":21,"line":111}]},[[{"SrcSpan":[{"column":18,"line":111},{"column":19,"line":111}]},{"Name":":","GType":"DataCon","Module":"GHC.Types"}],[[{"SrcSpan":[{"column":17,"line":111},{"column":18,"line":111}]},{"Name":"x","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String)","Type":"(String, String)","Module":""}],[{"SrcSpan":[{"column":19,"line":111},{"column":21,"line":111}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)]","Type":"[(String, String)]","Module":""}]]]]]],[[{"SrcSpan":[{"column":25,"line":111},{"column":43,"line":111}]},[{"SrcSpan":[{"column":25,"line":111},{"column":43,"line":111}]},[[{"SrcSpan":[{"column":25,"line":111},{"column":40,"line":111}]},[[{"SrcSpan":[{"column":25,"line":111},{"column":34,"line":111}]},{"Name":"concatSql","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])\n-> [(GHC.Base.String, GHC.Base.String)]\n-> (GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])\n-> [(String, String)] -> (String, String, [String])","Module":"VOAScraper"}],[{"SrcSpan":[{"column":35,"line":111},{"column":40,"line":111}]},{"Name":"cond'","HType":"v","GType":"Var","QType":"([GHC.Types.Char], [GHC.Types.Char], [GHC.Base.String])","Type":"([Char], [Char], [String])","Module":""}]]],[{"SrcSpan":[{"column":41,"line":111},{"column":43,"line":111}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)]","Type":"[(String, String)]","Module":""}]]]],[{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":113},{"column":25,"line":113}]},[[[{"Name":"key","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"key","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":113},{"column":25,"line":113}]},[[{"SrcSpan":[{"column":11,"line":113},{"column":21,"line":113}]},[[{"SrcSpan":[{"column":12,"line":113},{"column":15,"line":113}]},{"Name":"key","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":17,"line":113},{"column":20,"line":113}]},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]],[{"SrcSpan":[{"column":24,"line":113},{"column":25,"line":113}]},[{"SrcSpan":[{"column":24,"line":113},{"column":25,"line":113}]},{"Name":"x","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String)","Type":"(String, String)","Module":""}]],"{!NameSet placeholder here!}"]]}]]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":112},{"column":36,"line":112}]},[[[{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":112},{"column":36,"line":112}]},[[{"SrcSpan":[{"column":11,"line":112},{"column":29,"line":112}]},[[{"SrcSpan":[{"column":12,"line":112},{"column":15,"line":112}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":17,"line":112},{"column":21,"line":112}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":23,"line":112},{"column":28,"line":112}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}]]],[{"SrcSpan":[{"column":32,"line":112},{"column":36,"line":112}]},[{"SrcSpan":[{"column":32,"line":112},{"column":36,"line":112}]},{"Name":"cond","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])","Module":""}]],"{!NameSet placeholder here!}"]]}]]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":114},{"column":36,"line":129}]},[[{"Name":"cond'","HType":"v","GType":"Var","QType":"([GHC.Types.Char], [GHC.Types.Char], [GHC.Base.String])","Type":"([Char], [Char], [String])","Module":""},{"Name":"cond'","HType":"v","GType":"Var","QType":"([GHC.Types.Char], [GHC.Types.Char], [GHC.Base.String])","Type":"([Char], [Char], [String])","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":114},{"column":36,"line":129}]},[[{"SrcSpan":[{"column":11,"line":114},{"column":16,"line":114}]},{"Name":"cond'","HType":"v","GType":"Var","QType":"([GHC.Types.Char], [GHC.Types.Char], [GHC.Base.String])","Type":"([Char], [Char], [String])","Module":""}],[{"SrcSpan":[{"column":11,"line":114},{"column":36,"line":129}]},[{"SrcSpan":[{"column":19,"line":114},{"column":36,"line":129}]},[{"SrcSpan":[{"column":19,"line":114},{"column":36,"line":129}]},[[{"SrcSpan":[{"column":24,"line":114},{"column":27,"line":114}]},{"Name":"key","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[[{"SrcSpan":[{"column":13,"line":115},{"column":64,"line":116}]},[[{"SrcSpan":[{"column":13,"line":115},{"column":20,"line":115}]},[[{"FastString":"\"title\""},{"FastString":"\"title\""}],{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}]],[{"SrcSpan":[{"column":17,"line":116},{"column":64,"line":116}]},[{"SrcSpan":[{"column":17,"line":116},{"column":64,"line":116}]},[[{"SrcSpan":[{"column":18,"line":116},{"column":33,"line":116}]},[[{"SrcSpan":[{"column":18,"line":116},{"column":21,"line":116}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":22,"line":116},{"column":24,"line":116}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":25,"line":116},{"column":33,"line":116}]},[{"FastString":"\"title,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"title,\""}]]]]],[{"SrcSpan":[{"column":35,"line":116},{"column":47,"line":116}]},[[{"SrcSpan":[{"column":35,"line":116},{"column":39,"line":116}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":40,"line":116},{"column":42,"line":116}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":43,"line":116},{"column":47,"line":116}]},[{"FastString":"\"?,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"?,\""}]]]]],[{"SrcSpan":[{"column":49,"line":116},{"column":63,"line":116}]},[[{"SrcSpan":[{"column":49,"line":116},{"column":54,"line":116}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":55,"line":116},{"column":57,"line":116}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":58,"line":116},{"column":63,"line":116}]},[{"SrcSpan":[{"column":59,"line":116},{"column":62,"line":116}]},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],[{"SrcSpan":[{"column":13,"line":117},{"column":62,"line":118}]},[[{"SrcSpan":[{"column":13,"line":117},{"column":19,"line":117}]},[[{"FastString":"\"guid\""},{"FastString":"\"guid\""}],{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}]],[{"SrcSpan":[{"column":17,"line":118},{"column":62,"line":118}]},[{"SrcSpan":[{"column":17,"line":118},{"column":62,"line":118}]},[[{"SrcSpan":[{"column":18,"line":118},{"column":31,"line":118}]},[[{"SrcSpan":[{"column":18,"line":118},{"column":21,"line":118}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":22,"line":118},{"column":24,"line":118}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":25,"line":118},{"column":31,"line":118}]},[{"FastString":"\"uri,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"uri,\""}]]]]],[{"SrcSpan":[{"column":33,"line":118},{"column":45,"line":118}]},[[{"SrcSpan":[{"column":33,"line":118},{"column":37,"line":118}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":38,"line":118},{"column":40,"line":118}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":41,"line":118},{"column":45,"line":118}]},[{"FastString":"\"?,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"?,\""}]]]]],[{"SrcSpan":[{"column":47,"line":118},{"column":61,"line":118}]},[[{"SrcSpan":[{"column":47,"line":118},{"column":52,"line":118}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":53,"line":118},{"column":55,"line":118}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":56,"line":118},{"column":61,"line":118}]},[{"SrcSpan":[{"column":57,"line":118},{"column":60,"line":118}]},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],[{"SrcSpan":[{"column":13,"line":119},{"column":70,"line":120}]},[[{"SrcSpan":[{"column":13,"line":119},{"column":26,"line":119}]},[[{"FastString":"\"description\""},{"FastString":"\"description\""}],{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}]],[{"SrcSpan":[{"column":17,"line":120},{"column":70,"line":120}]},[{"SrcSpan":[{"column":17,"line":120},{"column":70,"line":120}]},[[{"SrcSpan":[{"column":18,"line":120},{"column":39,"line":120}]},[[{"SrcSpan":[{"column":18,"line":120},{"column":21,"line":120}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":22,"line":120},{"column":24,"line":120}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":25,"line":120},{"column":39,"line":120}]},[{"FastString":"\"description,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"description,\""}]]]]],[{"SrcSpan":[{"column":41,"line":120},{"column":53,"line":120}]},[[{"SrcSpan":[{"column":41,"line":120},{"column":45,"line":120}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":46,"line":120},{"column":48,"line":120}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":49,"line":120},{"column":53,"line":120}]},[{"FastString":"\"?,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"?,\""}]]]]],[{"SrcSpan":[{"column":55,"line":120},{"column":69,"line":120}]},[[{"SrcSpan":[{"column":55,"line":120},{"column":60,"line":120}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":61,"line":120},{"column":63,"line":120}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":64,"line":120},{"column":69,"line":120}]},[{"SrcSpan":[{"column":65,"line":120},{"column":68,"line":120}]},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],[{"SrcSpan":[{"column":13,"line":121},{"column":67,"line":122}]},[[{"SrcSpan":[{"column":13,"line":121},{"column":22,"line":121}]},[[{"FastString":"\"pubDate\""},{"FastString":"\"pubDate\""}],{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}]],[{"SrcSpan":[{"column":17,"line":122},{"column":67,"line":122}]},[{"SrcSpan":[{"column":17,"line":122},{"column":67,"line":122}]},[[{"SrcSpan":[{"column":18,"line":122},{"column":36,"line":122}]},[[{"SrcSpan":[{"column":18,"line":122},{"column":21,"line":122}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":22,"line":122},{"column":24,"line":122}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":25,"line":122},{"column":36,"line":122}]},[{"FastString":"\"pub_date,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"pub_date,\""}]]]]],[{"SrcSpan":[{"column":38,"line":122},{"column":50,"line":122}]},[[{"SrcSpan":[{"column":38,"line":122},{"column":42,"line":122}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":43,"line":122},{"column":45,"line":122}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":46,"line":122},{"column":50,"line":122}]},[{"FastString":"\"?,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"?,\""}]]]]],[{"SrcSpan":[{"column":52,"line":122},{"column":66,"line":122}]},[[{"SrcSpan":[{"column":52,"line":122},{"column":57,"line":122}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":58,"line":122},{"column":60,"line":122}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":61,"line":122},{"column":66,"line":122}]},[{"SrcSpan":[{"column":62,"line":122},{"column":65,"line":122}]},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],[{"SrcSpan":[{"column":13,"line":123},{"column":67,"line":124}]},[[{"SrcSpan":[{"column":13,"line":123},{"column":23,"line":123}]},[[{"FastString":"\"category\""},{"FastString":"\"category\""}],{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}]],[{"SrcSpan":[{"column":17,"line":124},{"column":67,"line":124}]},[{"SrcSpan":[{"column":17,"line":124},{"column":67,"line":124}]},[[{"SrcSpan":[{"column":18,"line":124},{"column":36,"line":124}]},[[{"SrcSpan":[{"column":18,"line":124},{"column":21,"line":124}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":22,"line":124},{"column":24,"line":124}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":25,"line":124},{"column":36,"line":124}]},[{"FastString":"\"category,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"category,\""}]]]]],[{"SrcSpan":[{"column":38,"line":124},{"column":50,"line":124}]},[[{"SrcSpan":[{"column":38,"line":124},{"column":42,"line":124}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":43,"line":124},{"column":45,"line":124}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":46,"line":124},{"column":50,"line":124}]},[{"FastString":"\"?,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"?,\""}]]]]],[{"SrcSpan":[{"column":52,"line":124},{"column":66,"line":124}]},[[{"SrcSpan":[{"column":52,"line":124},{"column":57,"line":124}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":58,"line":124},{"column":60,"line":124}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":61,"line":124},{"column":66,"line":124}]},[{"SrcSpan":[{"column":62,"line":124},{"column":65,"line":124}]},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],[{"SrcSpan":[{"column":13,"line":125},{"column":65,"line":126}]},[[{"SrcSpan":[{"column":13,"line":125},{"column":21,"line":125}]},[[{"FastString":"\"author\""},{"FastString":"\"author\""}],{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}]],[{"SrcSpan":[{"column":17,"line":126},{"column":65,"line":126}]},[{"SrcSpan":[{"column":17,"line":126},{"column":65,"line":126}]},[[{"SrcSpan":[{"column":18,"line":126},{"column":34,"line":126}]},[[{"SrcSpan":[{"column":18,"line":126},{"column":21,"line":126}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":22,"line":126},{"column":24,"line":126}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":25,"line":126},{"column":34,"line":126}]},[{"FastString":"\"author,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"author,\""}]]]]],[{"SrcSpan":[{"column":36,"line":126},{"column":48,"line":126}]},[[{"SrcSpan":[{"column":36,"line":126},{"column":40,"line":126}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":41,"line":126},{"column":43,"line":126}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":44,"line":126},{"column":48,"line":126}]},[{"FastString":"\"?,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"?,\""}]]]]],[{"SrcSpan":[{"column":50,"line":126},{"column":64,"line":126}]},[[{"SrcSpan":[{"column":50,"line":126},{"column":55,"line":126}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":56,"line":126},{"column":58,"line":126}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":59,"line":126},{"column":64,"line":126}]},[{"SrcSpan":[{"column":60,"line":126},{"column":63,"line":126}]},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],[{"SrcSpan":[{"column":13,"line":127},{"column":68,"line":128}]},[[{"SrcSpan":[{"column":13,"line":127},{"column":24,"line":127}]},[[{"FastString":"\"enclosure\""},{"FastString":"\"enclosure\""}],{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}]],[{"SrcSpan":[{"column":17,"line":128},{"column":68,"line":128}]},[{"SrcSpan":[{"column":17,"line":128},{"column":68,"line":128}]},[[{"SrcSpan":[{"column":18,"line":128},{"column":37,"line":128}]},[[{"SrcSpan":[{"column":18,"line":128},{"column":21,"line":128}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":22,"line":128},{"column":24,"line":128}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":25,"line":128},{"column":37,"line":128}]},[{"FastString":"\"enclosure,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"enclosure,\""}]]]]],[{"SrcSpan":[{"column":39,"line":128},{"column":51,"line":128}]},[[{"SrcSpan":[{"column":39,"line":128},{"column":43,"line":128}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":44,"line":128},{"column":46,"line":128}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":47,"line":128},{"column":51,"line":128}]},[{"FastString":"\"?,\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"?,\""}]]]]],[{"SrcSpan":[{"column":53,"line":128},{"column":67,"line":128}]},[[{"SrcSpan":[{"column":53,"line":128},{"column":58,"line":128}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":59,"line":128},{"column":61,"line":128}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":62,"line":128},{"column":67,"line":128}]},[{"SrcSpan":[{"column":63,"line":128},{"column":66,"line":128}]},{"Name":"val","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],[{"SrcSpan":[{"column":13,"line":129},{"column":36,"line":129}]},[{"SrcSpan":[{"column":13,"line":129},{"column":14,"line":129}]},[{"SrcSpan":[{"column":18,"line":129},{"column":36,"line":129}]},[{"SrcSpan":[{"column":18,"line":129},{"column":36,"line":129}]},[[{"SrcSpan":[{"column":19,"line":129},{"column":22,"line":129}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":24,"line":129},{"column":28,"line":129}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":30,"line":129},{"column":35,"line":129}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}]]]]]]]]]]],"{!NameSet placeholder here!}"]]}]]}]]]],[{"SrcSpan":[{"column":1,"line":130},{"column":25,"line":130}]},[[[{"SrcSpan":[{"column":11,"line":130},{"column":15,"line":130}]},{"Name":"cond","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])","Module":""}],[{"SrcSpan":[{"column":16,"line":130},{"column":18,"line":130}]},[{"SrcSpan":[{"column":16,"line":130},{"column":18,"line":130}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]]],[{"SrcSpan":[{"column":21,"line":130},{"column":25,"line":130}]},[{"SrcSpan":[{"column":21,"line":130},{"column":25,"line":130}]},{"Name":"cond","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])","Module":""}]]]]],"{!NameSet placeholder here!}"]]}]],[{"SrcSpan":[{"column":1,"line":68},{"column":34,"line":80}]},[[{"Name":"getMediaUrl","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO GHC.Base.String","Type":"String -> IO String","Module":"VOAScraper"},{"Name":"getMediaUrl","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO GHC.Base.String","Type":"String -> IO String","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":68},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":1,"line":68},{"column":12,"line":68}]},{"Name":"getMediaUrl","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO GHC.Base.String","Type":"String -> IO String","Module":""}],[{"SrcSpan":[{"column":1,"line":68},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":13,"line":68},{"column":16,"line":68}]},{"Name":"url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":19,"line":68},{"column":34,"line":80}]},[{"SrcSpan":[{"column":19,"line":68},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":5,"line":69},{"column":86,"line":69}]},[[{"SrcSpan":[{"column":5,"line":69},{"column":17,"line":69}]},{"Name":"mediaContent","HType":"v","GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":""}],[{"SrcSpan":[{"column":21,"line":69},{"column":86,"line":69}]},[[{"SrcSpan":[{"column":21,"line":69},{"column":30,"line":69}]},{"Name":"runMaybeT","HType":"v","GType":"Var","QType":"forall (m :: * -> *) a.\nControl.Monad.Maybe.MaybeT m a\n-> m (Data.Maybe.Maybe a) GHC.Types.IO GHC.Base.String","Type":"forall (m :: * -> *) a. MaybeT m a -> m (Maybe a) IO String","Module":"Control.Monad.Maybe"}],[{"SrcSpan":[{"column":31,"line":69},{"column":32,"line":69}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b (Control.Monad.Maybe.MaybeT\n                                  GHC.Types.IO GHC.Base.String) (GHC.Types.IO\n                                                                   (Data.Maybe.Maybe\n                                                                      GHC.Base.String))","Type":"forall a b. (a -> b) -> a -> b (MaybeT IO String) (IO\n                                                     (Maybe String))","Module":"GHC.Base"}],[{"SrcSpan":[{"column":33,"line":69},{"column":86,"line":69}]},[[{"SrcSpan":[{"column":33,"line":69},{"column":40,"line":69}]},{"Name":"openUrl","HType":"v","GType":"Var","QType":"GHC.Base.String\n-> Control.Monad.Maybe.MaybeT GHC.Types.IO GHC.Base.String","Type":"String -> MaybeT IO String","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":41,"line":69},{"column":86,"line":69}]},[{"SrcSpan":[{"column":42,"line":69},{"column":85,"line":69}]},[[{"SrcSpan":[{"column":42,"line":69},{"column":78,"line":69}]},[{"FastString":"\"http://learningenglish.voanews.com\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"http://learningenglish.voanews.com\""}]]],[{"SrcSpan":[{"column":79,"line":69},{"column":81,"line":69}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":82,"line":69},{"column":85,"line":69}]},{"Name":"url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":5,"line":70},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":5,"line":70},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":10,"line":70},{"column":22,"line":70}]},{"Name":"mediaContent","HType":"v","GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":""}],[[{"SrcSpan":[{"column":9,"line":71},{"column":29,"line":71}]},[[{"SrcSpan":[{"column":9,"line":71},{"column":16,"line":71}]},[{"SrcSpan":[{"column":9,"line":71},{"column":16,"line":71}]},{"Name":"Nothing","GType":"DataCon","Module":"Data.Maybe"}]],[{"SrcSpan":[{"column":20,"line":71},{"column":29,"line":71}]},[{"SrcSpan":[{"column":20,"line":71},{"column":29,"line":71}]},[[{"SrcSpan":[{"column":20,"line":71},{"column":26,"line":71}]},{"Name":"return","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base"}],[{"SrcSpan":[{"column":27,"line":71},{"column":29,"line":71}]},[{"FastString":"\"\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String","Type":"IsString String => String -> String","Module":"Data.String"},{"FastString":"\"\""}]]]]]]]],[{"SrcSpan":[{"column":9,"line":72},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":9,"line":72},{"column":27,"line":72}]},[[{"SrcSpan":[{"column":9,"line":72},{"column":13,"line":72}]},{"Name":"Just","GType":"DataCon","Module":"Data.Maybe"}],[{"SrcSpan":[{"column":14,"line":72},{"column":27,"line":72}]},{"Name":"mediaContent'","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]],[{"SrcSpan":[{"column":31,"line":72},{"column":34,"line":80}]},[{"SrcSpan":[{"column":31,"line":72},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":13,"line":73},{"column":84,"line":73}]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":17,"line":73},{"column":84,"line":73}]},[[{"Name":"s","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},{"Name":"b","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""}],[{"Name":"doc","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree","Module":""},{"Name":"doc","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"IOStateArrow s b XmlTree","Module":""},[{"Name":"s","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},{"Name":"b","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""}]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":17,"line":73},{"column":84,"line":73}]},[[{"SrcSpan":[{"column":17,"line":73},{"column":20,"line":73}]},{"Name":"doc","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"IOStateArrow s b XmlTree","Module":""}],[{"SrcSpan":[{"column":17,"line":73},{"column":84,"line":73}]},[{"SrcSpan":[{"column":23,"line":73},{"column":84,"line":73}]},[{"SrcSpan":[{"column":23,"line":73},{"column":84,"line":73}]},[[{"SrcSpan":[{"column":23,"line":73},{"column":70,"line":73}]},[[{"SrcSpan":[{"column":23,"line":73},{"column":33,"line":73}]},{"Name":"readString","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.SysConfigList\n-> GHC.Base.String\n-> Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n     s b Text.XML.HXT.DOM.TypeDefs.XmlTree s b","Type":"forall s b. SysConfigList -> String -> IOStateArrow s b XmlTree s b","Module":"Text.XML.HXT.Arrow.ReadDocument"}],[{"SrcSpan":[{"column":34,"line":73},{"column":70,"line":73}]},[[{"SrcSpan":[{"column":35,"line":73},{"column":52,"line":73}]},[[{"SrcSpan":[{"column":35,"line":73},{"column":48,"line":73}]},{"Name":"withParseHTML","HType":"v","GType":"Var","QType":"GHC.Types.Bool -> Text.XML.HXT.Arrow.XmlState.TypeDefs.SysConfig","Type":"Bool -> SysConfig","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig"}],[{"SrcSpan":[{"column":49,"line":73},{"column":52,"line":73}]},{"Name":"yes","HType":"v","GType":"Var","QType":"GHC.Types.Bool","Type":"Bool","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig"}]]],[{"SrcSpan":[{"column":54,"line":73},{"column":69,"line":73}]},[[{"SrcSpan":[{"column":54,"line":73},{"column":66,"line":73}]},{"Name":"withWarnings","HType":"v","GType":"Var","QType":"GHC.Types.Bool -> Text.XML.HXT.Arrow.XmlState.TypeDefs.SysConfig","Type":"Bool -> SysConfig","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig"}],[{"SrcSpan":[{"column":67,"line":73},{"column":69,"line":73}]},{"Name":"no","HType":"v","GType":"Var","QType":"GHC.Types.Bool","Type":"Bool","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig"}]]]]]]],[{"SrcSpan":[{"column":71,"line":73},{"column":84,"line":73}]},{"Name":"mediaContent'","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]],"{!NameSet placeholder here!}"]]}]]}],[{"SrcSpan":[{"column":13,"line":74},{"column":87,"line":77}]},[[{"SrcSpan":[{"column":13,"line":74},{"column":22,"line":74}]},{"Name":"mediaURLs","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":26,"line":74},{"column":87,"line":77}]},[[{"SrcSpan":[{"column":26,"line":74},{"column":30,"line":74}]},{"Name":"runX","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n  Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String\n-> GHC.Types.IO [GHC.Base.String]","Type":"IOSArrow XmlTree String -> IO [String]","Module":"Text.XML.HXT.Arrow.XmlState.RunIOStateArrow"}],[{"SrcSpan":[{"column":31,"line":74},{"column":32,"line":74}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b (Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n                      Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String) (GHC.Types.IO\n                                                                            [GHC.Base.String])","Type":"forall a b. (a -> b) -> a -> b (IOSArrow XmlTree String) (IO\n                                                            [String])","Module":"GHC.Base"}],[{"SrcSpan":[{"column":33,"line":74},{"column":87,"line":77}]},[[{"SrcSpan":[{"column":33,"line":74},{"column":36,"line":74}]},{"Name":"doc","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s\n  b\n  Text.XML.HXT.DOM.TypeDefs.XmlTree () Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree () XmlTree","Module":""}],[{"SrcSpan":[{"column":37,"line":74},{"column":40,"line":74}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA\n                                 (XIOState ())) XmlTree XmlTree String","Module":"Control.Category"}],[{"SrcSpan":[{"column":41,"line":74},{"column":87,"line":77}]},[[{"SrcSpan":[{"column":41,"line":74},{"column":50,"line":74}]},[[{"SrcSpan":[{"column":41,"line":74},{"column":44,"line":74}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":45,"line":74},{"column":50,"line":74}]},[{"FastString":"\"div\""},{"FastString":"\"div\""}]]]],[{"SrcSpan":[{"column":37,"line":75},{"column":40,"line":75}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree (Data.Tree.NTree.TypeDefs.NTree\n                                                                              Text.XML.HXT.DOM.TypeDefs.XNode) GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) XmlTree (NTree\n                                                               XNode) String","Module":"Control.Category"}],[{"SrcSpan":[{"column":41,"line":75},{"column":87,"line":77}]},[[{"SrcSpan":[{"column":41,"line":75},{"column":77,"line":75}]},[[{"SrcSpan":[{"column":41,"line":75},{"column":58,"line":75}]},[[{"SrcSpan":[{"column":41,"line":75},{"column":53,"line":75}]},{"Name":"hasAttrValue","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nGHC.Base.String\n-> (GHC.Base.String -> GHC.Types.Bool)\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"ArrowXml (IOSLA (XIOState ())) =>\nString -> (String -> Bool) -> IOSLA (XIOState ()) XmlTree XmlTree","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":54,"line":75},{"column":58,"line":75}]},[{"FastString":"\"id\""},{"FastString":"\"id\""}]]]],[{"SrcSpan":[{"column":59,"line":75},{"column":77,"line":75}]},[{"SrcSpan":[{"column":60,"line":75},{"column":76,"line":75}]},[[{"SrcSpan":[{"column":60,"line":75},{"column":62,"line":75}]},{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}],[{"SrcSpan":[{"column":63,"line":75},{"column":76,"line":75}]},[{"FastString":"\"flash_audio\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String","Type":"IsString String => String -> String","Module":"Data.String"},{"FastString":"\"flash_audio\""}]]]]]]]],[{"SrcSpan":[{"column":37,"line":76},{"column":40,"line":76}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) XmlTree String","Module":"Control.Category"}],[{"SrcSpan":[{"column":41,"line":76},{"column":87,"line":77}]},[[{"SrcSpan":[{"column":41,"line":76},{"column":48,"line":76}]},[[{"SrcSpan":[{"column":41,"line":76},{"column":44,"line":76}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":45,"line":76},{"column":48,"line":76}]},[{"FastString":"\"a\""},{"FastString":"\"a\""}]]]],[{"SrcSpan":[{"column":37,"line":77},{"column":40,"line":77}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree (Data.Tree.NTree.TypeDefs.NTree\n                                                                              Text.XML.HXT.DOM.TypeDefs.XNode) GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) XmlTree (NTree\n                                                               XNode) String","Module":"Control.Category"}],[{"SrcSpan":[{"column":41,"line":77},{"column":87,"line":77}]},[[{"SrcSpan":[{"column":41,"line":77},{"column":78,"line":77}]},[[{"SrcSpan":[{"column":41,"line":77},{"column":61,"line":77}]},[[{"SrcSpan":[{"column":41,"line":77},{"column":53,"line":77}]},{"Name":"hasAttrValue","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nGHC.Base.String\n-> (GHC.Base.String -> GHC.Types.Bool)\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"ArrowXml (IOSLA (XIOState ())) =>\nString -> (String -> Bool) -> IOSLA (XIOState ()) XmlTree XmlTree","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":54,"line":77},{"column":61,"line":77}]},[{"FastString":"\"class\""},{"FastString":"\"class\""}]]]],[{"SrcSpan":[{"column":62,"line":77},{"column":78,"line":77}]},[{"SrcSpan":[{"column":63,"line":77},{"column":77,"line":77}]},[[{"SrcSpan":[{"column":63,"line":77},{"column":65,"line":77}]},{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String -> GHC.Types.Bool","Type":"Eq String => String -> String -> Bool","Module":"GHC.Classes"}],[{"SrcSpan":[{"column":66,"line":77},{"column":77,"line":77}]},[{"FastString":"\"listenico\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String","Type":"IsString String => String -> String","Module":"Data.String"},{"FastString":"\"listenico\""}]]]]]]]],[{"SrcSpan":[{"column":79,"line":77},{"column":80,"line":77}]},{"Name":"!","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a.\nText.XML.HXT.Arrow.XmlArrow.ArrowXml cat =>\ncat a Text.XML.HXT.DOM.TypeDefs.XmlTree\n-> GHC.Base.String\n-> cat a GHC.Base.String (Control.Arrow.IOStateListArrow.IOSLA\n                            (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                               ())) (Data.Tree.NTree.TypeDefs.NTree\n                                       Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"forall (cat :: * -> * -> *) a.\nArrowXml cat =>\ncat a XmlTree -> String -> cat a String (IOSLA\n                                           (XIOState ())) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":81,"line":77},{"column":87,"line":77}]},[{"FastString":"\"href\""},{"FastString":"\"href\""}]]]]]]]]]]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":13,"line":78},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":13,"line":78},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":18,"line":78},{"column":27,"line":78}]},{"Name":"mediaURLs","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[[{"SrcSpan":[{"column":17,"line":79},{"column":32,"line":79}]},[[{"SrcSpan":[{"column":17,"line":79},{"column":19,"line":79}]},[{"SrcSpan":[{"column":17,"line":79},{"column":19,"line":79}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]],[{"SrcSpan":[{"column":23,"line":79},{"column":32,"line":79}]},[{"SrcSpan":[{"column":23,"line":79},{"column":32,"line":79}]},[[{"SrcSpan":[{"column":23,"line":79},{"column":29,"line":79}]},{"Name":"return","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base"}],[{"SrcSpan":[{"column":30,"line":79},{"column":32,"line":79}]},[{"FastString":"\"\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String","Type":"IsString String => String -> String","Module":"Data.String"},{"FastString":"\"\""}]]]]]]]],[{"SrcSpan":[{"column":17,"line":80},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":17,"line":80},{"column":22,"line":80}]},[{"SrcSpan":[{"column":18,"line":80},{"column":21,"line":80}]},[[{"SrcSpan":[{"column":19,"line":80},{"column":20,"line":80}]},{"Name":":","GType":"DataCon","Module":"GHC.Types"}],[[{"SrcSpan":[{"column":18,"line":80},{"column":19,"line":80}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],{"SrcSpan":[{"column":20,"line":80},{"column":21,"line":80}]}]]]],[{"SrcSpan":[{"column":26,"line":80},{"column":34,"line":80}]},[{"SrcSpan":[{"column":26,"line":80},{"column":34,"line":80}]},[[{"SrcSpan":[{"column":26,"line":80},{"column":32,"line":80}]},{"Name":"return","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base"}],[{"SrcSpan":[{"column":33,"line":80},{"column":34,"line":80}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]]]],"{!NameSet placeholder here!}"]]}]],[{"SrcSpan":[{"column":1,"line":62},{"column":15,"line":64}]},[[{"Name":"head'","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> GHC.Base.String","Type":"[String] -> String","Module":"VOAScraper"},{"Name":"head'","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> GHC.Base.String","Type":"[String] -> String","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":62},{"column":15,"line":64}]},[[{"SrcSpan":[{"column":1,"line":62},{"column":6,"line":62}]},{"Name":"head'","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> GHC.Base.String","Type":"[String] -> String","Module":""}],[{"SrcSpan":[{"column":1,"line":62},{"column":15,"line":64}]},[[{"SrcSpan":[{"column":7,"line":62},{"column":9,"line":62}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":12,"line":62},{"column":15,"line":64}]},[{"SrcSpan":[{"column":12,"line":62},{"column":15,"line":64}]},[[{"SrcSpan":[{"column":17,"line":62},{"column":19,"line":62}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[[{"SrcSpan":[{"column":5,"line":63},{"column":13,"line":63}]},[[{"SrcSpan":[{"column":5,"line":63},{"column":7,"line":63}]},[{"SrcSpan":[{"column":5,"line":63},{"column":7,"line":63}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]],[{"SrcSpan":[{"column":11,"line":63},{"column":13,"line":63}]},[{"SrcSpan":[{"column":11,"line":63},{"column":13,"line":63}]},[{"FastString":"\"\""},{"FastString":"\"\""}]]]]],[{"SrcSpan":[{"column":5,"line":64},{"column":15,"line":64}]},[[{"SrcSpan":[{"column":5,"line":64},{"column":10,"line":64}]},[{"SrcSpan":[{"column":6,"line":64},{"column":9,"line":64}]},[[{"SrcSpan":[{"column":7,"line":64},{"column":8,"line":64}]},{"Name":":","GType":"DataCon","Module":"GHC.Types"}],[[{"SrcSpan":[{"column":6,"line":64},{"column":7,"line":64}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],{"SrcSpan":[{"column":8,"line":64},{"column":9,"line":64}]}]]]],[{"SrcSpan":[{"column":14,"line":64},{"column":15,"line":64}]},[{"SrcSpan":[{"column":14,"line":64},{"column":15,"line":64}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]]],"{!NameSet placeholder here!}"]]}]],[{"SrcSpan":[{"column":1,"line":84},{"column":44,"line":107}]},[[{"Name":"getContent","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO (GHC.Base.String, GHC.Base.String)","Type":"String -> IO (String, String)","Module":"VOAScraper"},{"Name":"getContent","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO (GHC.Base.String, GHC.Base.String)","Type":"String -> IO (String, String)","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":84},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":1,"line":84},{"column":11,"line":84}]},{"Name":"getContent","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO (GHC.Base.String, GHC.Base.String)","Type":"String -> IO (String, String)","Module":""}],[{"SrcSpan":[{"column":1,"line":84},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":12,"line":84},{"column":15,"line":84}]},{"Name":"url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":18,"line":84},{"column":44,"line":107}]},[{"SrcSpan":[{"column":18,"line":84},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":5,"line":85},{"column":34,"line":85}]},[[{"SrcSpan":[{"column":5,"line":85},{"column":34,"line":85}]},[[{"SrcSpan":[{"column":5,"line":85},{"column":13,"line":85}]},{"Name":"putStrLn","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"System.IO"}],[{"SrcSpan":[{"column":14,"line":85},{"column":15,"line":85}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b GHC.Base.String (GHC.Types.IO ())","Type":"forall a b. (a -> b) -> a -> b String (IO ())","Module":"GHC.Base"}],[{"SrcSpan":[{"column":16,"line":85},{"column":34,"line":85}]},[[{"SrcSpan":[{"column":16,"line":85},{"column":27,"line":85}]},[{"FastString":"\"parsing: \""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"parsing: \""}]]],[{"SrcSpan":[{"column":28,"line":85},{"column":30,"line":85}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":31,"line":85},{"column":34,"line":85}]},{"Name":"url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]],{"Name":">>","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b. GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> IO b -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":5,"line":86},{"column":39,"line":86}]},[[{"SrcSpan":[{"column":5,"line":86},{"column":12,"line":86}]},{"Name":"content","HType":"v","GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":""}],[{"SrcSpan":[{"column":16,"line":86},{"column":39,"line":86}]},[[{"SrcSpan":[{"column":16,"line":86},{"column":25,"line":86}]},{"Name":"runMaybeT","HType":"v","GType":"Var","QType":"forall (m :: * -> *) a.\nControl.Monad.Maybe.MaybeT m a\n-> m (Data.Maybe.Maybe a) GHC.Types.IO GHC.Base.String","Type":"forall (m :: * -> *) a. MaybeT m a -> m (Maybe a) IO String","Module":"Control.Monad.Maybe"}],[{"SrcSpan":[{"column":26,"line":86},{"column":27,"line":86}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b (Control.Monad.Maybe.MaybeT\n                                  GHC.Types.IO GHC.Base.String) (GHC.Types.IO\n                                                                   (Data.Maybe.Maybe\n                                                                      GHC.Base.String))","Type":"forall a b. (a -> b) -> a -> b (MaybeT IO String) (IO\n                                                     (Maybe String))","Module":"GHC.Base"}],[{"SrcSpan":[{"column":28,"line":86},{"column":39,"line":86}]},[[{"SrcSpan":[{"column":28,"line":86},{"column":35,"line":86}]},{"Name":"openUrl","HType":"v","GType":"Var","QType":"GHC.Base.String\n-> Control.Monad.Maybe.MaybeT GHC.Types.IO GHC.Base.String","Type":"String -> MaybeT IO String","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":36,"line":86},{"column":39,"line":86}]},{"Name":"url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":5,"line":87},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":5,"line":87},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":10,"line":87},{"column":17,"line":87}]},{"Name":"content","HType":"v","GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":""}],[[{"SrcSpan":[{"column":9,"line":88},{"column":35,"line":88}]},[[{"SrcSpan":[{"column":9,"line":88},{"column":16,"line":88}]},[{"SrcSpan":[{"column":9,"line":88},{"column":16,"line":88}]},{"Name":"Nothing","GType":"DataCon","Module":"Data.Maybe"}]],[{"SrcSpan":[{"column":20,"line":88},{"column":35,"line":88}]},[{"SrcSpan":[{"column":20,"line":88},{"column":35,"line":88}]},[[{"SrcSpan":[{"column":20,"line":88},{"column":26,"line":88}]},{"Name":"return","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base"}],[{"SrcSpan":[{"column":27,"line":88},{"column":35,"line":88}]},[[{"SrcSpan":[{"column":28,"line":88},{"column":30,"line":88}]},[{"FastString":"\"\""},{"FastString":"\"\""}]],[{"SrcSpan":[{"column":32,"line":88},{"column":34,"line":88}]},[{"FastString":"\"\""},{"FastString":"\"\""}]]]]]]]]],[{"SrcSpan":[{"column":9,"line":89},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":9,"line":89},{"column":22,"line":89}]},[[{"SrcSpan":[{"column":9,"line":89},{"column":13,"line":89}]},{"Name":"Just","GType":"DataCon","Module":"Data.Maybe"}],[{"SrcSpan":[{"column":14,"line":89},{"column":22,"line":89}]},{"Name":"content'","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]],[{"SrcSpan":[{"column":26,"line":89},{"column":44,"line":107}]},[{"SrcSpan":[{"column":26,"line":89},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":13,"line":90},{"column":79,"line":90}]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":17,"line":90},{"column":79,"line":90}]},[[{"Name":"s","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},{"Name":"b","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""}],[{"Name":"doc","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree","Module":""},{"Name":"doc","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"IOStateArrow s b XmlTree","Module":""},[{"Name":"s","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},{"Name":"b","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""}]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":17,"line":90},{"column":79,"line":90}]},[[{"SrcSpan":[{"column":17,"line":90},{"column":20,"line":90}]},{"Name":"doc","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"IOStateArrow s b XmlTree","Module":""}],[{"SrcSpan":[{"column":17,"line":90},{"column":79,"line":90}]},[{"SrcSpan":[{"column":23,"line":90},{"column":79,"line":90}]},[{"SrcSpan":[{"column":23,"line":90},{"column":79,"line":90}]},[[{"SrcSpan":[{"column":23,"line":90},{"column":70,"line":90}]},[[{"SrcSpan":[{"column":23,"line":90},{"column":33,"line":90}]},{"Name":"readString","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.SysConfigList\n-> GHC.Base.String\n-> Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n     s b Text.XML.HXT.DOM.TypeDefs.XmlTree s b","Type":"forall s b. SysConfigList -> String -> IOStateArrow s b XmlTree s b","Module":"Text.XML.HXT.Arrow.ReadDocument"}],[{"SrcSpan":[{"column":34,"line":90},{"column":70,"line":90}]},[[{"SrcSpan":[{"column":35,"line":90},{"column":52,"line":90}]},[[{"SrcSpan":[{"column":35,"line":90},{"column":48,"line":90}]},{"Name":"withParseHTML","HType":"v","GType":"Var","QType":"GHC.Types.Bool -> Text.XML.HXT.Arrow.XmlState.TypeDefs.SysConfig","Type":"Bool -> SysConfig","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig"}],[{"SrcSpan":[{"column":49,"line":90},{"column":52,"line":90}]},{"Name":"yes","HType":"v","GType":"Var","QType":"GHC.Types.Bool","Type":"Bool","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig"}]]],[{"SrcSpan":[{"column":54,"line":90},{"column":69,"line":90}]},[[{"SrcSpan":[{"column":54,"line":90},{"column":66,"line":90}]},{"Name":"withWarnings","HType":"v","GType":"Var","QType":"GHC.Types.Bool -> Text.XML.HXT.Arrow.XmlState.TypeDefs.SysConfig","Type":"Bool -> SysConfig","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig"}],[{"SrcSpan":[{"column":67,"line":90},{"column":69,"line":90}]},{"Name":"no","HType":"v","GType":"Var","QType":"GHC.Types.Bool","Type":"Bool","Module":"Text.XML.HXT.Arrow.XmlState.SystemConfig"}]]]]]]],[{"SrcSpan":[{"column":71,"line":90},{"column":79,"line":90}]},{"Name":"content'","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]],"{!NameSet placeholder here!}"]]}]]}],[{"SrcSpan":[{"column":13,"line":91},{"column":69,"line":93}]},[[{"SrcSpan":[{"column":13,"line":91},{"column":22,"line":91}]},{"Name":"mediaURLs","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":26,"line":91},{"column":69,"line":93}]},[[{"SrcSpan":[{"column":26,"line":91},{"column":30,"line":91}]},{"Name":"runX","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n  Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String\n-> GHC.Types.IO [GHC.Base.String]","Type":"IOSArrow XmlTree String -> IO [String]","Module":"Text.XML.HXT.Arrow.XmlState.RunIOStateArrow"}],[{"SrcSpan":[{"column":31,"line":91},{"column":32,"line":91}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b (Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n                      Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String) (GHC.Types.IO\n                                                                            [GHC.Base.String])","Type":"forall a b. (a -> b) -> a -> b (IOSArrow XmlTree String) (IO\n                                                            [String])","Module":"GHC.Base"}],[{"SrcSpan":[{"column":33,"line":91},{"column":69,"line":93}]},[[{"SrcSpan":[{"column":33,"line":91},{"column":36,"line":91}]},{"Name":"doc","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s\n  b\n  Text.XML.HXT.DOM.TypeDefs.XmlTree () Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree () XmlTree","Module":""}],[{"SrcSpan":[{"column":37,"line":91},{"column":40,"line":91}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA\n                                 (XIOState ())) XmlTree XmlTree String","Module":"Control.Category"}],[{"SrcSpan":[{"column":41,"line":91},{"column":69,"line":93}]},[[{"SrcSpan":[{"column":41,"line":91},{"column":58,"line":91}]},[[{"SrcSpan":[{"column":41,"line":91},{"column":44,"line":91}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":45,"line":91},{"column":58,"line":91}]},[{"FastString":"\"div#article\""},{"FastString":"\"div#article\""}]]]],[{"SrcSpan":[{"column":37,"line":92},{"column":40,"line":92}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree (Data.Tree.NTree.TypeDefs.NTree\n                                                                              Text.XML.HXT.DOM.TypeDefs.XNode) GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) XmlTree (NTree\n                                                               XNode) String","Module":"Control.Category"}],[{"SrcSpan":[{"column":41,"line":92},{"column":69,"line":93}]},[[{"SrcSpan":[{"column":41,"line":92},{"column":57,"line":92}]},[[{"SrcSpan":[{"column":41,"line":92},{"column":44,"line":92}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":45,"line":92},{"column":57,"line":92}]},[{"FastString":"\"div.zoomMe\""},{"FastString":"\"div.zoomMe\""}]]]],[{"SrcSpan":[{"column":37,"line":93},{"column":40,"line":93}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) String","Module":"Control.Category"}],[{"SrcSpan":[{"column":41,"line":93},{"column":69,"line":93}]},[[{"SrcSpan":[{"column":41,"line":93},{"column":60,"line":93}]},[[{"SrcSpan":[{"column":41,"line":93},{"column":44,"line":93}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":45,"line":93},{"column":60,"line":93}]},[{"FastString":"\"a.downloadico\""},{"FastString":"\"a.downloadico\""}]]]],[{"SrcSpan":[{"column":61,"line":93},{"column":62,"line":93}]},{"Name":"!","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a.\nText.XML.HXT.Arrow.XmlArrow.ArrowXml cat =>\ncat a Text.XML.HXT.DOM.TypeDefs.XmlTree\n-> GHC.Base.String\n-> cat a GHC.Base.String (Control.Arrow.IOStateListArrow.IOSLA\n                            (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                               ())) (Data.Tree.NTree.TypeDefs.NTree\n                                       Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"forall (cat :: * -> * -> *) a.\nArrowXml cat =>\ncat a XmlTree -> String -> cat a String (IOSLA\n                                           (XIOState ())) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":63,"line":93},{"column":69,"line":93}]},[{"FastString":"\"href\""},{"FastString":"\"href\""}]]]]]]]]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":13,"line":95},{"column":38,"line":103}]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":17,"line":95},{"column":38,"line":103}]},[[{"Name":"mediaURL","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"mediaURL","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":17,"line":95},{"column":38,"line":103}]},[[{"SrcSpan":[{"column":17,"line":95},{"column":25,"line":95}]},{"Name":"mediaURL","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":17,"line":95},{"column":38,"line":103}]},[{"SrcSpan":[{"column":28,"line":95},{"column":38,"line":103}]},[{"SrcSpan":[{"column":28,"line":95},{"column":38,"line":103}]},[[{"SrcSpan":[{"column":28,"line":95},{"column":43,"line":95}]},{"Name":"unsafePerformIO","HType":"v","GType":"Var","QType":"GHC.Types.IO GHC.Base.String -> GHC.Base.String","Type":"IO String -> String","Module":"GHC.IO"}],[{"SrcSpan":[{"column":44,"line":95},{"column":45,"line":95}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b (GHC.Types.IO\n                                  GHC.Base.String) GHC.Base.String","Type":"forall a b. (a -> b) -> a -> b (IO String) String","Module":"GHC.Base"}],[{"SrcSpan":[{"column":46,"line":95},{"column":38,"line":103}]},[[{"SrcSpan":[{"column":51,"line":95},{"column":60,"line":95}]},{"Name":"mediaURLs","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[[{"SrcSpan":[{"column":21,"line":96},{"column":51,"line":102}]},[[{"SrcSpan":[{"column":21,"line":96},{"column":23,"line":96}]},[{"SrcSpan":[{"column":21,"line":96},{"column":23,"line":96}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]],[{"SrcSpan":[{"column":27,"line":96},{"column":51,"line":102}]},[{"SrcSpan":[{"column":27,"line":96},{"column":51,"line":102}]},[[{"SrcSpan":[{"column":25,"line":97},{"column":80,"line":99}]},[[{"SrcSpan":[{"column":25,"line":97},{"column":35,"line":97}]},{"Name":"listenURLs","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":39,"line":97},{"column":80,"line":99}]},[[{"SrcSpan":[{"column":39,"line":97},{"column":43,"line":97}]},{"Name":"runX","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n  Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String\n-> GHC.Types.IO [GHC.Base.String]","Type":"IOSArrow XmlTree String -> IO [String]","Module":"Text.XML.HXT.Arrow.XmlState.RunIOStateArrow"}],[{"SrcSpan":[{"column":44,"line":97},{"column":45,"line":97}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b (Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n                      Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String) (GHC.Types.IO\n                                                                            [GHC.Base.String])","Type":"forall a b. (a -> b) -> a -> b (IOSArrow XmlTree String) (IO\n                                                            [String])","Module":"GHC.Base"}],[{"SrcSpan":[{"column":46,"line":97},{"column":80,"line":99}]},[[{"SrcSpan":[{"column":46,"line":97},{"column":49,"line":97}]},{"Name":"doc","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s\n  b\n  Text.XML.HXT.DOM.TypeDefs.XmlTree () Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree () XmlTree","Module":""}],[{"SrcSpan":[{"column":50,"line":97},{"column":53,"line":97}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA\n                                 (XIOState ())) XmlTree XmlTree String","Module":"Control.Category"}],[{"SrcSpan":[{"column":54,"line":97},{"column":80,"line":99}]},[[{"SrcSpan":[{"column":54,"line":97},{"column":71,"line":97}]},[[{"SrcSpan":[{"column":54,"line":97},{"column":57,"line":97}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":58,"line":97},{"column":71,"line":97}]},[{"FastString":"\"div#article\""},{"FastString":"\"div#article\""}]]]],[{"SrcSpan":[{"column":50,"line":98},{"column":53,"line":98}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree (Data.Tree.NTree.TypeDefs.NTree\n                                                                              Text.XML.HXT.DOM.TypeDefs.XNode) GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) XmlTree (NTree\n                                                               XNode) String","Module":"Control.Category"}],[{"SrcSpan":[{"column":54,"line":98},{"column":80,"line":99}]},[[{"SrcSpan":[{"column":54,"line":98},{"column":73,"line":98}]},[[{"SrcSpan":[{"column":54,"line":98},{"column":57,"line":98}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":58,"line":98},{"column":73,"line":98}]},[{"FastString":"\"li.listenlink\""},{"FastString":"\"li.listenlink\""}]]]],[{"SrcSpan":[{"column":50,"line":99},{"column":53,"line":99}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) GHC.Base.String","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) String","Module":"Control.Category"}],[{"SrcSpan":[{"column":54,"line":99},{"column":80,"line":99}]},[[{"SrcSpan":[{"column":54,"line":99},{"column":71,"line":99}]},[[{"SrcSpan":[{"column":54,"line":99},{"column":57,"line":99}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":58,"line":99},{"column":71,"line":99}]},[{"FastString":"\"a.listenico\""},{"FastString":"\"a.listenico\""}]]]],[{"SrcSpan":[{"column":72,"line":99},{"column":73,"line":99}]},{"Name":"!","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a.\nText.XML.HXT.Arrow.XmlArrow.ArrowXml cat =>\ncat a Text.XML.HXT.DOM.TypeDefs.XmlTree\n-> GHC.Base.String\n-> cat a GHC.Base.String (Control.Arrow.IOStateListArrow.IOSLA\n                            (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                               ())) (Data.Tree.NTree.TypeDefs.NTree\n                                       Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"forall (cat :: * -> * -> *) a.\nArrowXml cat =>\ncat a XmlTree -> String -> cat a String (IOSLA\n                                           (XIOState ())) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":74,"line":99},{"column":80,"line":99}]},[{"FastString":"\"href\""},{"FastString":"\"href\""}]]]]]]]]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":25,"line":100},{"column":51,"line":102}]},[[{"SrcSpan":[{"column":25,"line":100},{"column":51,"line":102}]},[[{"SrcSpan":[{"column":30,"line":100},{"column":40,"line":100}]},{"Name":"listenURLs","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[[{"SrcSpan":[{"column":29,"line":101},{"column":44,"line":101}]},[[{"SrcSpan":[{"column":29,"line":101},{"column":31,"line":101}]},[{"SrcSpan":[{"column":29,"line":101},{"column":31,"line":101}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]],[{"SrcSpan":[{"column":35,"line":101},{"column":44,"line":101}]},[{"SrcSpan":[{"column":35,"line":101},{"column":44,"line":101}]},[[{"SrcSpan":[{"column":35,"line":101},{"column":41,"line":101}]},{"Name":"return","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base"}],[{"SrcSpan":[{"column":42,"line":101},{"column":44,"line":101}]},[{"FastString":"\"\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String","Type":"IsString String => String -> String","Module":"Data.String"},{"FastString":"\"\""}]]]]]]]],[{"SrcSpan":[{"column":29,"line":102},{"column":51,"line":102}]},[[{"SrcSpan":[{"column":29,"line":102},{"column":34,"line":102}]},[{"SrcSpan":[{"column":30,"line":102},{"column":33,"line":102}]},[[{"SrcSpan":[{"column":31,"line":102},{"column":32,"line":102}]},{"Name":":","GType":"DataCon","Module":"GHC.Types"}],[[{"SrcSpan":[{"column":30,"line":102},{"column":31,"line":102}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],{"SrcSpan":[{"column":32,"line":102},{"column":33,"line":102}]}]]]],[{"SrcSpan":[{"column":38,"line":102},{"column":51,"line":102}]},[{"SrcSpan":[{"column":38,"line":102},{"column":51,"line":102}]},[[{"SrcSpan":[{"column":38,"line":102},{"column":49,"line":102}]},{"Name":"getMediaUrl","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO GHC.Base.String","Type":"String -> IO String","Module":"VOAScraper"}],[{"SrcSpan":[{"column":50,"line":102},{"column":51,"line":102}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]]]],[{"SrcSpan":[{"column":21,"line":103},{"column":38,"line":103}]},[[{"SrcSpan":[{"column":21,"line":103},{"column":26,"line":103}]},[{"SrcSpan":[{"column":22,"line":103},{"column":25,"line":103}]},[[{"SrcSpan":[{"column":23,"line":103},{"column":24,"line":103}]},{"Name":":","GType":"DataCon","Module":"GHC.Types"}],[[{"SrcSpan":[{"column":22,"line":103},{"column":23,"line":103}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],{"SrcSpan":[{"column":24,"line":103},{"column":25,"line":103}]}]]]],[{"SrcSpan":[{"column":30,"line":103},{"column":38,"line":103}]},[{"SrcSpan":[{"column":30,"line":103},{"column":38,"line":103}]},[[{"SrcSpan":[{"column":30,"line":103},{"column":36,"line":103}]},{"Name":"return","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base"}],[{"SrcSpan":[{"column":37,"line":103},{"column":38,"line":103}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]]]]]]],"{!NameSet placeholder here!}"]]}]]}],[{"SrcSpan":[{"column":13,"line":105},{"column":62,"line":106}]},[[{"SrcSpan":[{"column":13,"line":105},{"column":19,"line":105}]},{"Name":"rawdiv","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":23,"line":105},{"column":62,"line":106}]},[[{"SrcSpan":[{"column":23,"line":105},{"column":35,"line":105}]},[[{"SrcSpan":[{"column":23,"line":105},{"column":27,"line":105}]},{"Name":"runX","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n  Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String\n-> GHC.Types.IO [GHC.Base.String]","Type":"IOSArrow XmlTree String -> IO [String]","Module":"Text.XML.HXT.Arrow.XmlState.RunIOStateArrow"}],[{"SrcSpan":[{"column":28,"line":105},{"column":29,"line":105}]},{"Name":".","HType":"v","GType":"Var","QType":"forall b c a.\n(b -> c)\n-> (a -> b)\n-> a\n-> c (Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n        Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String) (GHC.Types.IO\n                                                              [GHC.Base.String]) (Control.Arrow.IOStateListArrow.IOSLA\n                                                                                    (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                                                                       ())\n                                                                                    Text.XML.HXT.DOM.TypeDefs.XmlTree\n                                                                                    Text.XML.HXT.DOM.TypeDefs.XmlTree)","Type":"forall b c a. (b -> c) -> (a -> b) -> a -> c (IOSArrow\n                                                XmlTree String) (IO [String]) (IOSLA\n                                                                                 (XIOState ())\n                                                                                 XmlTree\n                                                                                 XmlTree)","Module":"GHC.Base"}],[{"SrcSpan":[{"column":30,"line":105},{"column":35,"line":105}]},{"Name":"xshow","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall n.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) n Text.XML.HXT.DOM.TypeDefs.XmlTree\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) n GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nforall n.\nIOSLA (XIOState ()) n XmlTree -> IOSLA (XIOState ()) n String","Module":"Text.XML.HXT.Arrow.XmlArrow"}]]],[{"SrcSpan":[{"column":36,"line":105},{"column":37,"line":105}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b (Control.Arrow.IOStateListArrow.IOSLA\n                      (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())\n                      Text.XML.HXT.DOM.TypeDefs.XmlTree\n                      Text.XML.HXT.DOM.TypeDefs.XmlTree) (GHC.Types.IO [GHC.Base.String])","Type":"forall a b. (a -> b) -> a -> b (IOSLA\n                                  (XIOState ()) XmlTree XmlTree) (IO [String])","Module":"GHC.Base"}],[{"SrcSpan":[{"column":38,"line":105},{"column":62,"line":106}]},[[{"SrcSpan":[{"column":38,"line":105},{"column":41,"line":105}]},{"Name":"doc","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s\n  b\n  Text.XML.HXT.DOM.TypeDefs.XmlTree () Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree () XmlTree","Module":""}],[{"SrcSpan":[{"column":42,"line":105},{"column":45,"line":105}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA\n                                 (XIOState ())) XmlTree XmlTree XmlTree","Module":"Control.Category"}],[{"SrcSpan":[{"column":46,"line":105},{"column":62,"line":106}]},[[{"SrcSpan":[{"column":46,"line":105},{"column":63,"line":105}]},[[{"SrcSpan":[{"column":46,"line":105},{"column":49,"line":105}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":50,"line":105},{"column":63,"line":105}]},[{"FastString":"\"div#article\""},{"FastString":"\"div#article\""}]]]],[{"SrcSpan":[{"column":42,"line":106},{"column":45,"line":106}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree (Data.Tree.NTree.TypeDefs.NTree\n                                                                              Text.XML.HXT.DOM.TypeDefs.XNode) Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) XmlTree (NTree\n                                                               XNode) XmlTree","Module":"Control.Category"}],[{"SrcSpan":[{"column":46,"line":106},{"column":62,"line":106}]},[[{"SrcSpan":[{"column":46,"line":106},{"column":49,"line":106}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":50,"line":106},{"column":62,"line":106}]},[{"FastString":"\"div.zoomMe\""},{"FastString":"\"div.zoomMe\""}]]]]]]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":13,"line":107},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":13,"line":107},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":13,"line":107},{"column":19,"line":107}]},{"Name":"return","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base"}],[{"SrcSpan":[{"column":20,"line":107},{"column":44,"line":107}]},[[{"SrcSpan":[{"column":21,"line":107},{"column":29,"line":107}]},{"Name":"mediaURL","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":31,"line":107},{"column":43,"line":107}]},[[{"SrcSpan":[{"column":31,"line":107},{"column":36,"line":107}]},{"Name":"head'","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> GHC.Base.String","Type":"[String] -> String","Module":"VOAScraper"}],[{"SrcSpan":[{"column":37,"line":107},{"column":43,"line":107}]},{"Name":"rawdiv","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}]]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]]]],"{!NameSet placeholder here!}"]]}]],[{"SrcSpan":[{"column":1,"line":134},{"column":51,"line":156}]},[[{"Name":"insertDB","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)] -> GHC.Types.IO ()","Type":"[(String, String)] -> IO ()","Module":"VOAScraper"},{"Name":"insertDB","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)] -> GHC.Types.IO ()","Type":"[(String, String)] -> IO ()","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":134},{"column":51,"line":156}]},[[{"SrcSpan":[{"column":1,"line":134},{"column":9,"line":134}]},{"Name":"insertDB","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)] -> GHC.Types.IO ()","Type":"[(String, String)] -> IO ()","Module":""}],[{"SrcSpan":[{"column":1,"line":134},{"column":51,"line":156}]},[[{"SrcSpan":[{"column":10,"line":134},{"column":11,"line":134}]},{"Name":"x","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)]","Type":"[(String, String)]","Module":""}],[[{"SrcSpan":[{"column":14,"line":134},{"column":14,"line":155}]},[{"SrcSpan":[{"column":14,"line":134},{"column":14,"line":155}]},[[{"SrcSpan":[{"column":14,"line":134},{"column":6,"line":155}]},[[{"SrcSpan":[{"column":14,"line":134},{"column":21,"line":134}]},{"Name":"catch","HType":"v","GType":"Var","QType":"forall e a.\nGHC.Exception.Exception e =>\nGHC.Types.IO a\n-> (e -> GHC.Types.IO a)\n-> GHC.Types.IO a GHC.Exception.SomeException ()","Type":"forall e a.\nException e =>\nIO a -> (e -> IO a) -> IO a SomeException ()","Module":"Control.Exception.Base"}],[{"SrcSpan":[{"column":22,"line":134},{"column":6,"line":155}]},[{"SrcSpan":[{"column":23,"line":134},{"column":5,"line":155}]},[[{"SrcSpan":[{"column":5,"line":135},{"column":42,"line":135}]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":9,"line":135},{"column":42,"line":135}]},[[{"Name":"uri","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"uri","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":9,"line":135},{"column":42,"line":135}]},[[{"SrcSpan":[{"column":9,"line":135},{"column":12,"line":135}]},{"Name":"uri","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":9,"line":135},{"column":42,"line":135}]},[{"SrcSpan":[{"column":15,"line":135},{"column":42,"line":135}]},[{"SrcSpan":[{"column":15,"line":135},{"column":42,"line":135}]},[[{"SrcSpan":[{"column":15,"line":135},{"column":29,"line":135}]},[[{"SrcSpan":[{"column":15,"line":135},{"column":27,"line":135}]},{"Name":"fromList","HType":"v","GType":"Var","QType":"forall k a.\nGHC.Classes.Ord k =>\n[(k, a)] -> Data.Map.Map k a GHC.Base.String GHC.Base.String","Type":"forall k a. Ord k => [(k, a)] -> Map k a String String","Module":"Data.Map"}],[{"SrcSpan":[{"column":28,"line":135},{"column":29,"line":135}]},{"Name":"x","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)]","Type":"[(String, String)]","Module":""}]]],[{"SrcSpan":[{"column":30,"line":135},{"column":35,"line":135}]},{"Name":"!","HType":"v","GType":"Var","QType":"forall k a.\nGHC.Classes.Ord k =>\nData.Map.Map k a -> k -> a GHC.Base.String GHC.Base.String","Type":"forall k a. Ord k => Map k a -> k -> a String String","Module":"Data.Map"}],[{"SrcSpan":[{"column":36,"line":135},{"column":42,"line":135}]},[{"FastString":"\"guid\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString GHC.Base.String =>\nGHC.Base.String -> GHC.Base.String","Type":"IsString String => String -> String","Module":"Data.String"},{"FastString":"\"guid\""}]]]]]]],"{!NameSet placeholder here!}"]]}]]}],[{"SrcSpan":[{"column":5,"line":136},{"column":45,"line":136}]},[[{"SrcSpan":[{"column":5,"line":136},{"column":9,"line":136}]},{"Name":"conn","HType":"v","GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":""}],[{"SrcSpan":[{"column":13,"line":136},{"column":45,"line":136}]},[[{"SrcSpan":[{"column":13,"line":136},{"column":27,"line":136}]},{"Name":"connectSqlite3","HType":"v","GType":"Var","QType":"GHC.IO.FilePath\n-> GHC.Types.IO Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"FilePath -> IO Connection","Module":"Database.HDBC.Sqlite3.Connection"}],[{"SrcSpan":[{"column":28,"line":136},{"column":45,"line":136}]},[{"FastString":"\"web_scrape.s3db\""},{"FastString":"\"web_scrape.s3db\""}]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":5,"line":137},{"column":78,"line":137}]},[[{"SrcSpan":[{"column":5,"line":137},{"column":6,"line":137}]},{"Name":"r","HType":"v","GType":"Var","QType":"[[Database.HDBC.SqlValue.SqlValue]]","Type":"[[SqlValue]]","Module":""}],[{"SrcSpan":[{"column":10,"line":137},{"column":78,"line":137}]},[[{"SrcSpan":[{"column":10,"line":137},{"column":66,"line":137}]},[[{"SrcSpan":[{"column":10,"line":137},{"column":26,"line":137}]},[[{"SrcSpan":[{"column":10,"line":137},{"column":21,"line":137}]},{"Name":"quickQuery'","HType":"v","GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection\n-> GHC.Base.String\n-> [Database.HDBC.SqlValue.SqlValue]\n-> GHC.Types.IO [[Database.HDBC.SqlValue.SqlValue]]","Type":"IConnection Connection =>\nConnection -> String -> [SqlValue] -> IO [[SqlValue]]","Module":"Database.HDBC.Utils"}],[{"SrcSpan":[{"column":22,"line":137},{"column":26,"line":137}]},{"Name":"conn","HType":"v","GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":""}]]],[{"SrcSpan":[{"column":27,"line":137},{"column":66,"line":137}]},[{"FastString":"\"select id from web_scrape where uri=?\""},{"FastString":"\"select id from web_scrape where uri=?\""}]]]],[{"SrcSpan":[{"column":67,"line":137},{"column":78,"line":137}]},[{"SrcSpan":[{"column":68,"line":137},{"column":77,"line":137}]},[[{"SrcSpan":[{"column":68,"line":137},{"column":73,"line":137}]},{"Name":"toSql","HType":"v","GType":"Var","QType":"Data.Convertible.Base.Convertible\n  GHC.Base.String Database.HDBC.SqlValue.SqlValue =>\nGHC.Base.String -> Database.HDBC.SqlValue.SqlValue","Type":"Convertible String SqlValue => String -> SqlValue","Module":"Database.HDBC.SqlValue"}],[{"SrcSpan":[{"column":74,"line":137},{"column":77,"line":137}]},{"Name":"uri","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":5,"line":138},{"column":20,"line":138}]},[[{"SrcSpan":[{"column":5,"line":138},{"column":20,"line":138}]},[[{"SrcSpan":[{"column":5,"line":138},{"column":15,"line":138}]},{"Name":"disconnect","HType":"v","GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection -> GHC.Types.IO ()","Type":"IConnection Connection => Connection -> IO ()","Module":"Database.HDBC.Types"}],[{"SrcSpan":[{"column":16,"line":138},{"column":20,"line":138}]},{"Name":"conn","HType":"v","GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":""}]]],{"Name":">>","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b. GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> IO b -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":5,"line":139},{"column":28,"line":154}]},[[{"SrcSpan":[{"column":5,"line":139},{"column":28,"line":154}]},[[{"SrcSpan":[{"column":10,"line":139},{"column":11,"line":139}]},{"Name":"r","HType":"v","GType":"Var","QType":"[[Database.HDBC.SqlValue.SqlValue]]","Type":"[[SqlValue]]","Module":""}],[[{"SrcSpan":[{"column":9,"line":140},{"column":33,"line":153}]},[[{"SrcSpan":[{"column":9,"line":140},{"column":11,"line":140}]},[{"SrcSpan":[{"column":9,"line":140},{"column":11,"line":140}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]],[{"SrcSpan":[{"column":15,"line":140},{"column":33,"line":153}]},[{"SrcSpan":[{"column":15,"line":140},{"column":33,"line":153}]},[[{"SrcSpan":[{"column":17,"line":141},{"column":65,"line":141}]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":141},{"column":65,"line":141}]},[[[{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":141},{"column":65,"line":141}]},[[{"SrcSpan":[{"column":21,"line":141},{"column":39,"line":141}]},[[{"SrcSpan":[{"column":22,"line":141},{"column":25,"line":141}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":27,"line":141},{"column":31,"line":141}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":33,"line":141},{"column":38,"line":141}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}]]],[{"SrcSpan":[{"column":43,"line":141},{"column":65,"line":141}]},[{"SrcSpan":[{"column":43,"line":141},{"column":65,"line":141}]},[[{"SrcSpan":[{"column":43,"line":141},{"column":63,"line":141}]},[[{"SrcSpan":[{"column":43,"line":141},{"column":52,"line":141}]},{"Name":"concatSql","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String, [GHC.Base.String])\n-> [(GHC.Base.String, GHC.Base.String)]\n-> (GHC.Base.String, GHC.Base.String, [GHC.Base.String])","Type":"(String, String, [String])\n-> [(String, String)] -> (String, String, [String])","Module":"VOAScraper"}],[{"SrcSpan":[{"column":53,"line":141},{"column":63,"line":141}]},[[{"SrcSpan":[{"column":54,"line":141},{"column":56,"line":141}]},[{"FastString":"\"\""},{"FastString":"\"\""}]],[{"SrcSpan":[{"column":57,"line":141},{"column":59,"line":141}]},[{"FastString":"\"\""},{"FastString":"\"\""}]],[{"SrcSpan":[{"column":60,"line":141},{"column":62,"line":141}]},{"Name":"[]","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":"GHC.Types"}]]]]],[{"SrcSpan":[{"column":64,"line":141},{"column":65,"line":141}]},{"Name":"x","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)]","Type":"[(String, String)]","Module":""}]]]],"{!NameSet placeholder here!}"]]}]]}],[{"SrcSpan":[{"column":17,"line":143},{"column":38,"line":143}]},[[{"SrcSpan":[{"column":17,"line":143},{"column":20,"line":143}]},{"Name":"cnt","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String)","Type":"(String, String)","Module":""}],[{"SrcSpan":[{"column":24,"line":143},{"column":38,"line":143}]},[[{"SrcSpan":[{"column":24,"line":143},{"column":34,"line":143}]},{"Name":"getContent","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO (GHC.Base.String, GHC.Base.String)","Type":"String -> IO (String, String)","Module":"VOAScraper"}],[{"SrcSpan":[{"column":35,"line":143},{"column":38,"line":143}]},{"Name":"uri","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":17,"line":144},{"column":80,"line":148}]},[{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":147},{"column":96,"line":147}]},[[{"Name":"timestamp","HType":"v","GType":"Var","QType":"GHC.Integer.Type.Integer","Type":"Integer","Module":""},{"Name":"timestamp","HType":"v","GType":"Var","QType":"GHC.Integer.Type.Integer","Type":"Integer","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":147},{"column":96,"line":147}]},[[{"SrcSpan":[{"column":21,"line":147},{"column":30,"line":147}]},{"Name":"timestamp","HType":"v","GType":"Var","QType":"GHC.Integer.Type.Integer","Type":"Integer","Module":""}],[{"SrcSpan":[{"column":21,"line":147},{"column":96,"line":147}]},[{"SrcSpan":[{"column":33,"line":147},{"column":96,"line":147}]},[{"SrcSpan":[{"column":33,"line":147},{"column":96,"line":147}]},[[{"SrcSpan":[{"column":33,"line":147},{"column":48,"line":147}]},{"Name":"unsafePerformIO","HType":"v","GType":"Var","QType":"GHC.Types.IO GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer","Type":"IO Integer -> Integer","Module":"GHC.IO"}],[{"SrcSpan":[{"column":49,"line":147},{"column":50,"line":147}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b (GHC.Types.IO\n                                  GHC.Integer.Type.Integer) GHC.Integer.Type.Integer","Type":"forall a b. (a -> b) -> a -> b (IO Integer) Integer","Module":"GHC.Base"}],[{"SrcSpan":[{"column":51,"line":147},{"column":96,"line":147}]},[[{"SrcSpan":[{"column":51,"line":147},{"column":63,"line":147}]},{"Name":"getClockTime","HType":"v","GType":"Var","QType":"GHC.Types.IO System.Time.ClockTime","Type":"IO ClockTime","Module":"System.Time"}],[{"SrcSpan":[{"column":64,"line":147},{"column":67,"line":147}]},{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"}],[{"SrcSpan":[{"column":68,"line":147},{"column":96,"line":147}]},[{"SrcSpan":[{"column":69,"line":147},{"column":95,"line":147}]},[{"SrcSpan":[{"column":69,"line":147},{"column":95,"line":147}]},[[{"SrcSpan":[{"column":70,"line":147},{"column":81,"line":147}]},[{"SrcSpan":[{"column":71,"line":147},{"column":80,"line":147}]},[[{"SrcSpan":[{"column":71,"line":147},{"column":74,"line":147}]},{"Name":"TOD","GType":"DataCon","Module":"System.Time"}],[[{"SrcSpan":[{"column":75,"line":147},{"column":78,"line":147}]},{"Name":"sec","HType":"v","GType":"Var","QType":"GHC.Integer.Type.Integer","Type":"Integer","Module":""}],{"SrcSpan":[{"column":79,"line":147},{"column":80,"line":147}]}]]]],[{"SrcSpan":[{"column":85,"line":147},{"column":95,"line":147}]},[{"SrcSpan":[{"column":85,"line":147},{"column":95,"line":147}]},[[{"SrcSpan":[{"column":85,"line":147},{"column":91,"line":147}]},{"Name":"return","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO => forall a. a -> GHC.Types.IO a","Type":"Monad IO => forall a. a -> IO a","Module":"GHC.Base"}],[{"SrcSpan":[{"column":92,"line":147},{"column":95,"line":147}]},{"Name":"sec","HType":"v","GType":"Var","QType":"GHC.Integer.Type.Integer","Type":"Integer","Module":""}]]]]]]]]]]]]]],"{!NameSet placeholder here!}"]]}]]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":146},{"column":44,"line":146}]},[[{"Name":"sql2'","HType":"v","GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":""},{"Name":"sql2'","HType":"v","GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":146},{"column":44,"line":146}]},[[{"SrcSpan":[{"column":21,"line":146},{"column":26,"line":146}]},{"Name":"sql2'","HType":"v","GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":""}],[{"SrcSpan":[{"column":21,"line":146},{"column":44,"line":146}]},[{"SrcSpan":[{"column":29,"line":146},{"column":44,"line":146}]},[{"SrcSpan":[{"column":29,"line":146},{"column":44,"line":146}]},[[{"SrcSpan":[{"column":29,"line":146},{"column":33,"line":146}]},{"Name":"sql2","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":34,"line":146},{"column":36,"line":146}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":37,"line":146},{"column":44,"line":146}]},[{"FastString":"\"?,?,?\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"?,?,?\""}]]]]]]],"{!NameSet placeholder here!}"]]}]]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":145},{"column":57,"line":145}]},[[{"Name":"sql'","HType":"v","GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":""},{"Name":"sql'","HType":"v","GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":145},{"column":57,"line":145}]},[[{"SrcSpan":[{"column":21,"line":145},{"column":25,"line":145}]},{"Name":"sql'","HType":"v","GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":""}],[{"SrcSpan":[{"column":21,"line":145},{"column":57,"line":145}]},[{"SrcSpan":[{"column":28,"line":145},{"column":57,"line":145}]},[{"SrcSpan":[{"column":28,"line":145},{"column":57,"line":145}]},[[{"SrcSpan":[{"column":28,"line":145},{"column":31,"line":145}]},{"Name":"sql","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":32,"line":145},{"column":34,"line":145}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":35,"line":145},{"column":57,"line":145}]},[{"FastString":"\"media_url,body,ctime\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"media_url,body,ctime\""}]]]]]]],"{!NameSet placeholder here!}"]]}]]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":144},{"column":44,"line":144}]},[[[{"Name":"media_url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"media_url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"Name":"body","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""},{"Name":"body","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":144},{"column":44,"line":144}]},[[{"SrcSpan":[{"column":21,"line":144},{"column":38,"line":144}]},[[{"SrcSpan":[{"column":22,"line":144},{"column":31,"line":144}]},{"Name":"media_url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":33,"line":144},{"column":37,"line":144}]},{"Name":"body","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]],[{"SrcSpan":[{"column":41,"line":144},{"column":44,"line":144}]},[{"SrcSpan":[{"column":41,"line":144},{"column":44,"line":144}]},{"Name":"cnt","HType":"v","GType":"Var","QType":"(GHC.Base.String, GHC.Base.String)","Type":"(String, String)","Module":""}]],"{!NameSet placeholder here!}"]]}]]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":148},{"column":80,"line":148}]},[[{"Name":"value'","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""},{"Name":"value'","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":21,"line":148},{"column":80,"line":148}]},[[{"SrcSpan":[{"column":21,"line":148},{"column":27,"line":148}]},{"Name":"value'","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":21,"line":148},{"column":80,"line":148}]},[{"SrcSpan":[{"column":30,"line":148},{"column":80,"line":148}]},[{"SrcSpan":[{"column":30,"line":148},{"column":80,"line":148}]},[[{"SrcSpan":[{"column":30,"line":148},{"column":35,"line":148}]},{"Name":"value","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":36,"line":148},{"column":38,"line":148}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":39,"line":148},{"column":80,"line":148}]},[[{"SrcSpan":[{"column":39,"line":148},{"column":50,"line":148}]},[{"SrcSpan":[{"column":40,"line":148},{"column":49,"line":148}]},{"Name":"media_url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]],[{"SrcSpan":[{"column":51,"line":148},{"column":53,"line":148}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":54,"line":148},{"column":80,"line":148}]},[[{"SrcSpan":[{"column":54,"line":148},{"column":60,"line":148}]},[{"SrcSpan":[{"column":55,"line":148},{"column":59,"line":148}]},{"Name":"body","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]],[{"SrcSpan":[{"column":61,"line":148},{"column":63,"line":148}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Base.String] -> [GHC.Base.String] -> [GHC.Base.String]","Type":"[String] -> [String] -> [String]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":64,"line":148},{"column":80,"line":148}]},[{"SrcSpan":[{"column":65,"line":148},{"column":79,"line":148}]},[[{"SrcSpan":[{"column":65,"line":148},{"column":69,"line":148}]},{"Name":"show","HType":"v","GType":"Var","QType":"GHC.Show.Show GHC.Integer.Type.Integer =>\nGHC.Integer.Type.Integer -> GHC.Base.String","Type":"Show Integer => Integer -> String","Module":"GHC.Show"}],[{"SrcSpan":[{"column":70,"line":148},{"column":79,"line":148}]},{"Name":"timestamp","HType":"v","GType":"Var","QType":"GHC.Integer.Type.Integer","Type":"Integer","Module":""}]]]]]]]]]]]],"{!NameSet placeholder here!}"]]}]]}]],[{"SrcSpan":[{"column":17,"line":150},{"column":58,"line":150}]},[[{"SrcSpan":[{"column":17,"line":150},{"column":22,"line":150}]},{"Name":"conn'","HType":"v","GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":""}],[{"SrcSpan":[{"column":26,"line":150},{"column":58,"line":150}]},[[{"SrcSpan":[{"column":26,"line":150},{"column":40,"line":150}]},{"Name":"connectSqlite3","HType":"v","GType":"Var","QType":"GHC.IO.FilePath\n-> GHC.Types.IO Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"FilePath -> IO Connection","Module":"Database.HDBC.Sqlite3.Connection"}],[{"SrcSpan":[{"column":41,"line":150},{"column":58,"line":150}]},[{"FastString":"\"web_scrape.s3db\""},{"FastString":"\"web_scrape.s3db\""}]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":17,"line":151},{"column":114,"line":151}]},[[{"SrcSpan":[{"column":17,"line":151},{"column":114,"line":151}]},[[{"SrcSpan":[{"column":17,"line":151},{"column":95,"line":151}]},[[{"SrcSpan":[{"column":17,"line":151},{"column":26,"line":151}]},[[{"SrcSpan":[{"column":17,"line":151},{"column":20,"line":151}]},{"Name":"run","HType":"v","GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection\n-> GHC.Base.String\n-> [Database.HDBC.SqlValue.SqlValue]\n-> GHC.Types.IO GHC.Integer.Type.Integer","Type":"IConnection Connection =>\nConnection -> String -> [SqlValue] -> IO Integer","Module":"Database.HDBC.Types"}],[{"SrcSpan":[{"column":21,"line":151},{"column":26,"line":151}]},{"Name":"conn'","HType":"v","GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":""}]]],[{"SrcSpan":[{"column":27,"line":151},{"column":95,"line":151}]},[{"SrcSpan":[{"column":28,"line":151},{"column":94,"line":151}]},[[{"SrcSpan":[{"column":28,"line":151},{"column":54,"line":151}]},[{"FastString":"\"insert into web_scrape (\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"insert into web_scrape (\""}]]],[{"SrcSpan":[{"column":55,"line":151},{"column":57,"line":151}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":58,"line":151},{"column":94,"line":151}]},[[{"SrcSpan":[{"column":58,"line":151},{"column":62,"line":151}]},{"Name":"sql'","HType":"v","GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":""}],[{"SrcSpan":[{"column":63,"line":151},{"column":65,"line":151}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":66,"line":151},{"column":94,"line":151}]},[[{"SrcSpan":[{"column":66,"line":151},{"column":78,"line":151}]},[{"FastString":"\") values (\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\") values (\""}]]],[{"SrcSpan":[{"column":79,"line":151},{"column":81,"line":151}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":82,"line":151},{"column":94,"line":151}]},[[{"SrcSpan":[{"column":82,"line":151},{"column":87,"line":151}]},{"Name":"sql2'","HType":"v","GType":"Var","QType":"[GHC.Types.Char]","Type":"[Char]","Module":""}],[{"SrcSpan":[{"column":88,"line":151},{"column":90,"line":151}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":91,"line":151},{"column":94,"line":151}]},[{"FastString":"\")\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\")\""}]]]]]]]]]]]]]],[{"SrcSpan":[{"column":96,"line":151},{"column":114,"line":151}]},[{"SrcSpan":[{"column":97,"line":151},{"column":113,"line":151}]},[[{"SrcSpan":[{"column":97,"line":151},{"column":106,"line":151}]},[[{"SrcSpan":[{"column":97,"line":151},{"column":100,"line":151}]},{"Name":"map","HType":"v","GType":"Var","QType":"forall a b.\n(a -> b)\n-> [a] -> [b] GHC.Base.String Database.HDBC.SqlValue.SqlValue","Type":"forall a b. (a -> b) -> [a] -> [b] String SqlValue","Module":"GHC.Base"}],[{"SrcSpan":[{"column":101,"line":151},{"column":106,"line":151}]},{"Name":"toSql","HType":"v","GType":"Var","QType":"Data.Convertible.Base.Convertible\n  GHC.Base.String Database.HDBC.SqlValue.SqlValue =>\nGHC.Base.String -> Database.HDBC.SqlValue.SqlValue","Type":"Convertible String SqlValue => String -> SqlValue","Module":"Database.HDBC.SqlValue"}]]],[{"SrcSpan":[{"column":107,"line":151},{"column":113,"line":151}]},{"Name":"value'","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}]]]]]],{"Name":">>","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b. GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> IO b -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":17,"line":152},{"column":29,"line":152}]},[[{"SrcSpan":[{"column":17,"line":152},{"column":29,"line":152}]},[[{"SrcSpan":[{"column":17,"line":152},{"column":23,"line":152}]},{"Name":"commit","HType":"v","GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection -> GHC.Types.IO ()","Type":"IConnection Connection => Connection -> IO ()","Module":"Database.HDBC.Types"}],[{"SrcSpan":[{"column":24,"line":152},{"column":29,"line":152}]},{"Name":"conn'","HType":"v","GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":""}]]],{"Name":">>","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b. GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> IO b -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":17,"line":153},{"column":33,"line":153}]},[[{"SrcSpan":[{"column":17,"line":153},{"column":33,"line":153}]},[[{"SrcSpan":[{"column":17,"line":153},{"column":27,"line":153}]},{"Name":"disconnect","HType":"v","GType":"Var","QType":"Database.HDBC.Types.IConnection\n  Database.HDBC.Sqlite3.ConnectionImpl.Connection =>\nDatabase.HDBC.Sqlite3.ConnectionImpl.Connection -> GHC.Types.IO ()","Type":"IConnection Connection => Connection -> IO ()","Module":"Database.HDBC.Types"}],[{"SrcSpan":[{"column":28,"line":153},{"column":33,"line":153}]},{"Name":"conn'","HType":"v","GType":"Var","QType":"Database.HDBC.Sqlite3.ConnectionImpl.Connection","Type":"Connection","Module":""}]]],{"FastString":"\"noSyntaxExpr\""}]]]]]]],[{"SrcSpan":[{"column":9,"line":154},{"column":28,"line":154}]},[{"SrcSpan":[{"column":9,"line":154},{"column":10,"line":154}]},[{"SrcSpan":[{"column":14,"line":154},{"column":28,"line":154}]},[{"SrcSpan":[{"column":14,"line":154},{"column":28,"line":154}]},[[{"SrcSpan":[{"column":14,"line":154},{"column":19,"line":154}]},{"Name":"print","HType":"v","GType":"Var","QType":"GHC.Show.Show [Database.HDBC.SqlValue.SqlValue] =>\n[Database.HDBC.SqlValue.SqlValue] -> GHC.Types.IO ()","Type":"Show [SqlValue] => [SqlValue] -> IO ()","Module":"System.IO"}],[{"SrcSpan":[{"column":20,"line":154},{"column":21,"line":154}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b [Database.HDBC.SqlValue.SqlValue] (GHC.Types.IO\n                                                        ())","Type":"forall a b. (a -> b) -> a -> b [SqlValue] (IO ())","Module":"GHC.Base"}],[{"SrcSpan":[{"column":22,"line":154},{"column":28,"line":154}]},[[{"SrcSpan":[{"column":22,"line":154},{"column":26,"line":154}]},{"Name":"head","HType":"v","GType":"Var","QType":"[[Database.HDBC.SqlValue.SqlValue]]\n-> [Database.HDBC.SqlValue.SqlValue]","Type":"[[SqlValue]] -> [SqlValue]","Module":"GHC.List"}],[{"SrcSpan":[{"column":27,"line":154},{"column":28,"line":154}]},{"Name":"r","HType":"v","GType":"Var","QType":"[[Database.HDBC.SqlValue.SqlValue]]","Type":"[[SqlValue]]","Module":""}]]]]]]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]]]],[{"SrcSpan":[{"column":7,"line":155},{"column":14,"line":155}]},{"Name":"handler","HType":"v","GType":"Var","QType":"GHC.Exception.SomeException -> GHC.Types.IO ()","Type":"SomeException -> IO ()","Module":""}]]]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":156},{"column":51,"line":156}]},[[{"Name":"handler","HType":"v","GType":"Var","QType":"GHC.Exception.SomeException -> GHC.Types.IO ()","Type":"SomeException -> IO ()","Module":""},{"Name":"handler","HType":"v","GType":"Var","QType":"GHC.Exception.SomeException -> GHC.Types.IO ()","Type":"SomeException -> IO ()","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":156},{"column":51,"line":156}]},[[{"SrcSpan":[{"column":11,"line":156},{"column":18,"line":156}]},{"Name":"handler","HType":"v","GType":"Var","QType":"GHC.Exception.SomeException -> GHC.Types.IO ()","Type":"SomeException -> IO ()","Module":""}],[{"SrcSpan":[{"column":11,"line":156},{"column":51,"line":156}]},[[{"SrcSpan":[{"column":19,"line":156},{"column":20,"line":156}]},{"Name":"e","HType":"v","GType":"Var","QType":"GHC.Exception.SomeException","Type":"SomeException","Module":""}],[{"SrcSpan":[{"column":23,"line":156},{"column":51,"line":156}]},[{"SrcSpan":[{"column":23,"line":156},{"column":51,"line":156}]},[[{"SrcSpan":[{"column":23,"line":156},{"column":28,"line":156}]},{"Name":"print","HType":"v","GType":"Var","QType":"GHC.Show.Show GHC.Exception.SomeException =>\nGHC.Exception.SomeException -> GHC.Types.IO ()","Type":"Show SomeException => SomeException -> IO ()","Module":"System.IO"}],[{"SrcSpan":[{"column":29,"line":156},{"column":51,"line":156}]},[{"SrcSpan":[{"column":30,"line":156},{"column":50,"line":156}]},[[{"SrcSpan":[{"column":30,"line":156},{"column":31,"line":156}]},{"Name":"e","HType":"v","GType":"Var","QType":"GHC.Exception.SomeException","Type":"SomeException","Module":""}],[{"SrcSpan":[{"column":35,"line":156},{"column":50,"line":156}]},{"Name":"SomeException","HType":"t","GType":"Name","Module":"GHC.Exception"}]]]]]]]]],"{!NameSet placeholder here!}"]]}]]}]]],"{!NameSet placeholder here!}"]]}]],[{"SrcSpan":[{"column":1,"line":160},{"column":68,"line":179}]},[[{"Name":"scrapeXML","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"VOAScraper"},{"Name":"scrapeXML","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":160},{"column":68,"line":179}]},[[{"SrcSpan":[{"column":1,"line":160},{"column":10,"line":160}]},{"Name":"scrapeXML","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":""}],[{"SrcSpan":[{"column":1,"line":160},{"column":68,"line":179}]},[[{"SrcSpan":[{"column":11,"line":160},{"column":14,"line":160}]},{"Name":"url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":17,"line":160},{"column":68,"line":179}]},[{"SrcSpan":[{"column":17,"line":160},{"column":68,"line":179}]},[[{"SrcSpan":[{"column":5,"line":161},{"column":39,"line":161}]},[[{"SrcSpan":[{"column":5,"line":161},{"column":12,"line":161}]},{"Name":"content","HType":"v","GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":""}],[{"SrcSpan":[{"column":16,"line":161},{"column":39,"line":161}]},[[{"SrcSpan":[{"column":16,"line":161},{"column":25,"line":161}]},{"Name":"runMaybeT","HType":"v","GType":"Var","QType":"forall (m :: * -> *) a.\nControl.Monad.Maybe.MaybeT m a\n-> m (Data.Maybe.Maybe a) GHC.Types.IO GHC.Base.String","Type":"forall (m :: * -> *) a. MaybeT m a -> m (Maybe a) IO String","Module":"Control.Monad.Maybe"}],[{"SrcSpan":[{"column":26,"line":161},{"column":27,"line":161}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b (Control.Monad.Maybe.MaybeT\n                                  GHC.Types.IO GHC.Base.String) (GHC.Types.IO\n                                                                   (Data.Maybe.Maybe\n                                                                      GHC.Base.String))","Type":"forall a b. (a -> b) -> a -> b (MaybeT IO String) (IO\n                                                     (Maybe String))","Module":"GHC.Base"}],[{"SrcSpan":[{"column":28,"line":161},{"column":39,"line":161}]},[[{"SrcSpan":[{"column":28,"line":161},{"column":35,"line":161}]},{"Name":"openUrl","HType":"v","GType":"Var","QType":"GHC.Base.String\n-> Control.Monad.Maybe.MaybeT GHC.Types.IO GHC.Base.String","Type":"String -> MaybeT IO String","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":36,"line":161},{"column":39,"line":161}]},{"Name":"url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":5,"line":162},{"column":68,"line":179}]},[[{"SrcSpan":[{"column":5,"line":162},{"column":68,"line":179}]},[[{"SrcSpan":[{"column":10,"line":162},{"column":17,"line":162}]},{"Name":"content","HType":"v","GType":"Var","QType":"Data.Maybe.Maybe GHC.Base.String","Type":"Maybe String","Module":""}],[[{"SrcSpan":[{"column":9,"line":163},{"column":47,"line":163}]},[[{"SrcSpan":[{"column":9,"line":163},{"column":16,"line":163}]},[{"SrcSpan":[{"column":9,"line":163},{"column":16,"line":163}]},{"Name":"Nothing","GType":"DataCon","Module":"Data.Maybe"}]],[{"SrcSpan":[{"column":20,"line":163},{"column":47,"line":163}]},[{"SrcSpan":[{"column":20,"line":163},{"column":47,"line":163}]},[[{"SrcSpan":[{"column":20,"line":163},{"column":28,"line":163}]},{"Name":"putStrLn","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"System.IO"}],[{"SrcSpan":[{"column":29,"line":163},{"column":30,"line":163}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b GHC.Base.String (GHC.Types.IO ())","Type":"forall a b. (a -> b) -> a -> b String (IO ())","Module":"GHC.Base"}],[{"SrcSpan":[{"column":31,"line":163},{"column":47,"line":163}]},[[{"SrcSpan":[{"column":31,"line":163},{"column":40,"line":163}]},[{"FastString":"\"error: \""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString [GHC.Types.Char] =>\nGHC.Base.String -> [GHC.Types.Char]","Type":"IsString [Char] => String -> [Char]","Module":"Data.String"},{"FastString":"\"error: \""}]]],[{"SrcSpan":[{"column":41,"line":163},{"column":43,"line":163}]},{"Name":"++","HType":"v","GType":"Var","QType":"[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]","Type":"[Char] -> [Char] -> [Char]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":44,"line":163},{"column":47,"line":163}]},{"Name":"url","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]]],[{"SrcSpan":[{"column":9,"line":164},{"column":68,"line":179}]},[[{"SrcSpan":[{"column":9,"line":164},{"column":22,"line":164}]},[[{"SrcSpan":[{"column":9,"line":164},{"column":13,"line":164}]},{"Name":"Just","GType":"DataCon","Module":"Data.Maybe"}],[{"SrcSpan":[{"column":14,"line":164},{"column":22,"line":164}]},{"Name":"content'","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]],[[{"SrcSpan":[{"column":26,"line":164},{"column":13,"line":176}]},[{"SrcSpan":[{"column":26,"line":164},{"column":13,"line":176}]},[[{"SrcSpan":[{"column":13,"line":166},{"column":45,"line":166}]},{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":17,"line":166},{"column":45,"line":166}]},[[{"Name":"s","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},{"Name":"b","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""}],[{"Name":"doc","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree","Module":""},{"Name":"doc","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"IOStateArrow s b XmlTree","Module":""},[{"Name":"s","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},{"Name":"b","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""}]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":17,"line":166},{"column":45,"line":166}]},[[{"SrcSpan":[{"column":17,"line":166},{"column":20,"line":166}]},{"Name":"doc","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s b Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"IOStateArrow s b XmlTree","Module":""}],[{"SrcSpan":[{"column":17,"line":166},{"column":45,"line":166}]},[{"SrcSpan":[{"column":23,"line":166},{"column":45,"line":166}]},[{"SrcSpan":[{"column":23,"line":166},{"column":45,"line":166}]},[[{"SrcSpan":[{"column":23,"line":166},{"column":36,"line":166}]},[[{"SrcSpan":[{"column":23,"line":166},{"column":33,"line":166}]},{"Name":"readString","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.SysConfigList\n-> GHC.Base.String\n-> Text.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n     s b Text.XML.HXT.DOM.TypeDefs.XmlTree s b","Type":"forall s b. SysConfigList -> String -> IOStateArrow s b XmlTree s b","Module":"Text.XML.HXT.Arrow.ReadDocument"}],[{"SrcSpan":[{"column":34,"line":166},{"column":36,"line":166}]},{"Name":"[]","HType":"v","GType":"Var","QType":"[Text.XML.HXT.Arrow.XmlState.TypeDefs.SysConfig]","Type":"[SysConfig]","Module":"GHC.Types"}]]],[{"SrcSpan":[{"column":37,"line":166},{"column":45,"line":166}]},{"Name":"content'","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]],"{!NameSet placeholder here!}"]]}]]}],[{"SrcSpan":[{"column":13,"line":167},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":13,"line":167},{"column":15,"line":167}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)]","Type":"[(String, String)]","Module":""}],[{"SrcSpan":[{"column":19,"line":167},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":19,"line":167},{"column":23,"line":167}]},{"Name":"runX","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n  Text.XML.HXT.DOM.TypeDefs.XmlTree\n  (GHC.Base.String, GHC.Base.String)\n-> GHC.Types.IO [(GHC.Base.String, GHC.Base.String)]","Type":"IOSArrow XmlTree (String, String) -> IO [(String, String)]","Module":"Text.XML.HXT.Arrow.XmlState.RunIOStateArrow"}],[{"SrcSpan":[{"column":24,"line":167},{"column":25,"line":167}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b.\n(a -> b) -> a -> b (Text.XML.HXT.Arrow.XmlState.TypeDefs.IOSArrow\n                      Text.XML.HXT.DOM.TypeDefs.XmlTree\n                      (GHC.Base.String, GHC.Base.String)) (GHC.Types.IO\n                                                             [(GHC.Base.String, GHC.Base.String)])","Type":"forall a b. (a -> b) -> a -> b (IOSArrow\n                                  XmlTree (String, String)) (IO [(String, String)])","Module":"GHC.Base"}],[{"SrcSpan":[{"column":26,"line":167},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":26,"line":167},{"column":29,"line":167}]},{"Name":"doc","HType":"v","GType":"Var","QType":"forall s b.\nText.XML.HXT.Arrow.XmlState.TypeDefs.IOStateArrow\n  s\n  b\n  Text.XML.HXT.DOM.TypeDefs.XmlTree () Text.XML.HXT.DOM.TypeDefs.XmlTree","Type":"forall s b. IOStateArrow s b XmlTree () XmlTree","Module":""}],[{"SrcSpan":[{"column":30,"line":167},{"column":33,"line":167}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree Text.XML.HXT.DOM.TypeDefs.XmlTree (GHC.Base.String,\n                                                                                                              GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA\n                                 (XIOState ())) XmlTree XmlTree (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":34,"line":167},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":34,"line":167},{"column":44,"line":167}]},[[{"SrcSpan":[{"column":34,"line":167},{"column":37,"line":167}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":38,"line":167},{"column":44,"line":167}]},[{"FastString":"\"item\""},{"FastString":"\"item\""}]]]],[{"SrcSpan":[{"column":30,"line":168},{"column":33,"line":168}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) Text.XML.HXT.DOM.TypeDefs.XmlTree (Data.Tree.NTree.TypeDefs.NTree\n                                                                              Text.XML.HXT.DOM.TypeDefs.XNode) (GHC.Base.String,\n                                                                                                                GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) XmlTree (NTree\n                                                               XNode) (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":34,"line":168},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":34,"line":168},{"column":76,"line":168}]},[{"SrcSpan":[{"column":35,"line":168},{"column":75,"line":168}]},[[{"SrcSpan":[{"column":35,"line":168},{"column":46,"line":168}]},[[{"SrcSpan":[{"column":35,"line":168},{"column":38,"line":168}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":39,"line":168},{"column":46,"line":168}]},[{"FastString":"\"title\""},{"FastString":"\"title\""}]]]],[{"SrcSpan":[{"column":47,"line":168},{"column":50,"line":168}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) (GHC.Base.String,\n                                                                                                                  GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":51,"line":168},{"column":75,"line":168}]},[[{"SrcSpan":[{"column":51,"line":168},{"column":58,"line":168}]},{"Name":"getName","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":59,"line":168},{"column":62,"line":168}]},{"Name":"&&&","HType":"v","GType":"Var","QType":"Control.Arrow.Arrow\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c c'.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c'\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b (c, c')","Type":"Arrow (IOSLA (XIOState ())) =>\nforall b c c'.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c' -> IOSLA (XIOState ()) b (c, c')","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":63,"line":168},{"column":75,"line":168}]},[[{"SrcSpan":[{"column":63,"line":168},{"column":67,"line":168}]},[{"Name":"$dTree","HType":"v","GType":"Var","QType":"Data.Tree.Class.Tree Data.Tree.NTree.TypeDefs.NTree","Type":"Tree NTree","Module":""},{"Name":"deep","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowTree.ArrowTree\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall (t :: * -> *) b c.\nData.Tree.Class.Tree t =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c","Type":"ArrowTree (IOSLA (XIOState ())) =>\nforall (t :: * -> *) b c.\nTree t =>\nIOSLA (XIOState ()) (t b) c -> IOSLA (XIOState ()) (t b) c","Module":"Control.Arrow.ArrowTree"}]],[{"SrcSpan":[{"column":68,"line":168},{"column":75,"line":168}]},{"Name":"getText","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}]]]]]]]],[{"SrcSpan":[{"column":30,"line":169},{"column":33,"line":169}]},{"Name":"<+>","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowPlus\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c","Type":"ArrowPlus (IOSLA (XIOState ())) =>\nforall b c.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c -> IOSLA (XIOState ()) b c","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":34,"line":169},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":34,"line":169},{"column":75,"line":169}]},[{"SrcSpan":[{"column":35,"line":169},{"column":74,"line":169}]},[[{"SrcSpan":[{"column":35,"line":169},{"column":45,"line":169}]},[[{"SrcSpan":[{"column":35,"line":169},{"column":38,"line":169}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":39,"line":169},{"column":45,"line":169}]},[{"FastString":"\"guid\""},{"FastString":"\"guid\""}]]]],[{"SrcSpan":[{"column":46,"line":169},{"column":49,"line":169}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) (GHC.Base.String,\n                                                                                                                  GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":50,"line":169},{"column":74,"line":169}]},[[{"SrcSpan":[{"column":50,"line":169},{"column":57,"line":169}]},{"Name":"getName","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":58,"line":169},{"column":61,"line":169}]},{"Name":"&&&","HType":"v","GType":"Var","QType":"Control.Arrow.Arrow\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c c'.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c'\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b (c, c')","Type":"Arrow (IOSLA (XIOState ())) =>\nforall b c c'.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c' -> IOSLA (XIOState ()) b (c, c')","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":62,"line":169},{"column":74,"line":169}]},[[{"SrcSpan":[{"column":62,"line":169},{"column":66,"line":169}]},[{"Name":"$dTree","HType":"v","GType":"Var","QType":"Data.Tree.Class.Tree Data.Tree.NTree.TypeDefs.NTree","Type":"Tree NTree","Module":""},{"Name":"deep","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowTree.ArrowTree\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall (t :: * -> *) b c.\nData.Tree.Class.Tree t =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c","Type":"ArrowTree (IOSLA (XIOState ())) =>\nforall (t :: * -> *) b c.\nTree t =>\nIOSLA (XIOState ()) (t b) c -> IOSLA (XIOState ()) (t b) c","Module":"Control.Arrow.ArrowTree"}]],[{"SrcSpan":[{"column":67,"line":169},{"column":74,"line":169}]},{"Name":"getText","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}]]]]]]]],[{"SrcSpan":[{"column":30,"line":170},{"column":33,"line":170}]},{"Name":"<+>","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowPlus\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c","Type":"ArrowPlus (IOSLA (XIOState ())) =>\nforall b c.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c -> IOSLA (XIOState ()) b c","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":34,"line":170},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":34,"line":170},{"column":82,"line":170}]},[{"SrcSpan":[{"column":35,"line":170},{"column":81,"line":170}]},[[{"SrcSpan":[{"column":35,"line":170},{"column":52,"line":170}]},[[{"SrcSpan":[{"column":35,"line":170},{"column":38,"line":170}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":39,"line":170},{"column":52,"line":170}]},[{"FastString":"\"description\""},{"FastString":"\"description\""}]]]],[{"SrcSpan":[{"column":53,"line":170},{"column":56,"line":170}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) (GHC.Base.String,\n                                                                                                                  GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":57,"line":170},{"column":81,"line":170}]},[[{"SrcSpan":[{"column":57,"line":170},{"column":64,"line":170}]},{"Name":"getName","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":65,"line":170},{"column":68,"line":170}]},{"Name":"&&&","HType":"v","GType":"Var","QType":"Control.Arrow.Arrow\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c c'.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c'\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b (c, c')","Type":"Arrow (IOSLA (XIOState ())) =>\nforall b c c'.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c' -> IOSLA (XIOState ()) b (c, c')","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":69,"line":170},{"column":81,"line":170}]},[[{"SrcSpan":[{"column":69,"line":170},{"column":73,"line":170}]},[{"Name":"$dTree","HType":"v","GType":"Var","QType":"Data.Tree.Class.Tree Data.Tree.NTree.TypeDefs.NTree","Type":"Tree NTree","Module":""},{"Name":"deep","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowTree.ArrowTree\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall (t :: * -> *) b c.\nData.Tree.Class.Tree t =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c","Type":"ArrowTree (IOSLA (XIOState ())) =>\nforall (t :: * -> *) b c.\nTree t =>\nIOSLA (XIOState ()) (t b) c -> IOSLA (XIOState ()) (t b) c","Module":"Control.Arrow.ArrowTree"}]],[{"SrcSpan":[{"column":74,"line":170},{"column":81,"line":170}]},{"Name":"getText","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}]]]]]]]],[{"SrcSpan":[{"column":30,"line":171},{"column":33,"line":171}]},{"Name":"<+>","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowPlus\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c","Type":"ArrowPlus (IOSLA (XIOState ())) =>\nforall b c.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c -> IOSLA (XIOState ()) b c","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":34,"line":171},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":34,"line":171},{"column":78,"line":171}]},[{"SrcSpan":[{"column":35,"line":171},{"column":77,"line":171}]},[[{"SrcSpan":[{"column":35,"line":171},{"column":48,"line":171}]},[[{"SrcSpan":[{"column":35,"line":171},{"column":38,"line":171}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":39,"line":171},{"column":48,"line":171}]},[{"FastString":"\"pubDate\""},{"FastString":"\"pubDate\""}]]]],[{"SrcSpan":[{"column":49,"line":171},{"column":52,"line":171}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) (GHC.Base.String,\n                                                                                                                  GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":53,"line":171},{"column":77,"line":171}]},[[{"SrcSpan":[{"column":53,"line":171},{"column":60,"line":171}]},{"Name":"getName","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":61,"line":171},{"column":64,"line":171}]},{"Name":"&&&","HType":"v","GType":"Var","QType":"Control.Arrow.Arrow\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c c'.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c'\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b (c, c')","Type":"Arrow (IOSLA (XIOState ())) =>\nforall b c c'.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c' -> IOSLA (XIOState ()) b (c, c')","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":65,"line":171},{"column":77,"line":171}]},[[{"SrcSpan":[{"column":65,"line":171},{"column":69,"line":171}]},[{"Name":"$dTree","HType":"v","GType":"Var","QType":"Data.Tree.Class.Tree Data.Tree.NTree.TypeDefs.NTree","Type":"Tree NTree","Module":""},{"Name":"deep","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowTree.ArrowTree\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall (t :: * -> *) b c.\nData.Tree.Class.Tree t =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c","Type":"ArrowTree (IOSLA (XIOState ())) =>\nforall (t :: * -> *) b c.\nTree t =>\nIOSLA (XIOState ()) (t b) c -> IOSLA (XIOState ()) (t b) c","Module":"Control.Arrow.ArrowTree"}]],[{"SrcSpan":[{"column":70,"line":171},{"column":77,"line":171}]},{"Name":"getText","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}]]]]]]]],[{"SrcSpan":[{"column":30,"line":172},{"column":33,"line":172}]},{"Name":"<+>","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowPlus\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c","Type":"ArrowPlus (IOSLA (XIOState ())) =>\nforall b c.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c -> IOSLA (XIOState ()) b c","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":34,"line":172},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":34,"line":172},{"column":79,"line":172}]},[{"SrcSpan":[{"column":35,"line":172},{"column":78,"line":172}]},[[{"SrcSpan":[{"column":35,"line":172},{"column":49,"line":172}]},[[{"SrcSpan":[{"column":35,"line":172},{"column":38,"line":172}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":39,"line":172},{"column":49,"line":172}]},[{"FastString":"\"category\""},{"FastString":"\"category\""}]]]],[{"SrcSpan":[{"column":50,"line":172},{"column":53,"line":172}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) (GHC.Base.String,\n                                                                                                                  GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":54,"line":172},{"column":78,"line":172}]},[[{"SrcSpan":[{"column":54,"line":172},{"column":61,"line":172}]},{"Name":"getName","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":62,"line":172},{"column":65,"line":172}]},{"Name":"&&&","HType":"v","GType":"Var","QType":"Control.Arrow.Arrow\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c c'.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c'\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b (c, c')","Type":"Arrow (IOSLA (XIOState ())) =>\nforall b c c'.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c' -> IOSLA (XIOState ()) b (c, c')","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":66,"line":172},{"column":78,"line":172}]},[[{"SrcSpan":[{"column":66,"line":172},{"column":70,"line":172}]},[{"Name":"$dTree","HType":"v","GType":"Var","QType":"Data.Tree.Class.Tree Data.Tree.NTree.TypeDefs.NTree","Type":"Tree NTree","Module":""},{"Name":"deep","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowTree.ArrowTree\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall (t :: * -> *) b c.\nData.Tree.Class.Tree t =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c","Type":"ArrowTree (IOSLA (XIOState ())) =>\nforall (t :: * -> *) b c.\nTree t =>\nIOSLA (XIOState ()) (t b) c -> IOSLA (XIOState ()) (t b) c","Module":"Control.Arrow.ArrowTree"}]],[{"SrcSpan":[{"column":71,"line":172},{"column":78,"line":172}]},{"Name":"getText","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}]]]]]]]],[{"SrcSpan":[{"column":30,"line":173},{"column":33,"line":173}]},{"Name":"<+>","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowPlus\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c","Type":"ArrowPlus (IOSLA (XIOState ())) =>\nforall b c.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c -> IOSLA (XIOState ()) b c","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":34,"line":173},{"column":86,"line":174}]},[[{"SrcSpan":[{"column":34,"line":173},{"column":77,"line":173}]},[{"SrcSpan":[{"column":35,"line":173},{"column":76,"line":173}]},[[{"SrcSpan":[{"column":35,"line":173},{"column":47,"line":173}]},[[{"SrcSpan":[{"column":35,"line":173},{"column":38,"line":173}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":39,"line":173},{"column":47,"line":173}]},[{"FastString":"\"author\""},{"FastString":"\"author\""}]]]],[{"SrcSpan":[{"column":48,"line":173},{"column":51,"line":173}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) (GHC.Base.String,\n                                                                                                                  GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":52,"line":173},{"column":76,"line":173}]},[[{"SrcSpan":[{"column":52,"line":173},{"column":59,"line":173}]},{"Name":"getName","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":60,"line":173},{"column":63,"line":173}]},{"Name":"&&&","HType":"v","GType":"Var","QType":"Control.Arrow.Arrow\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c c'.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c'\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b (c, c')","Type":"Arrow (IOSLA (XIOState ())) =>\nforall b c c'.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c' -> IOSLA (XIOState ()) b (c, c')","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":64,"line":173},{"column":76,"line":173}]},[[{"SrcSpan":[{"column":64,"line":173},{"column":68,"line":173}]},[{"Name":"$dTree","HType":"v","GType":"Var","QType":"Data.Tree.Class.Tree Data.Tree.NTree.TypeDefs.NTree","Type":"Tree NTree","Module":""},{"Name":"deep","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowTree.ArrowTree\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall (t :: * -> *) b c.\nData.Tree.Class.Tree t =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) (t b) c","Type":"ArrowTree (IOSLA (XIOState ())) =>\nforall (t :: * -> *) b c.\nTree t =>\nIOSLA (XIOState ()) (t b) c -> IOSLA (XIOState ()) (t b) c","Module":"Control.Arrow.ArrowTree"}]],[{"SrcSpan":[{"column":69,"line":173},{"column":76,"line":173}]},{"Name":"getText","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}]]]]]]]],[{"SrcSpan":[{"column":30,"line":174},{"column":33,"line":174}]},{"Name":"<+>","HType":"v","GType":"Var","QType":"Control.Arrow.ArrowPlus\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c","Type":"ArrowPlus (IOSLA (XIOState ())) =>\nforall b c.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c -> IOSLA (XIOState ()) b c","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":34,"line":174},{"column":86,"line":174}]},[{"SrcSpan":[{"column":35,"line":174},{"column":85,"line":174}]},[[{"SrcSpan":[{"column":35,"line":174},{"column":50,"line":174}]},[[{"SrcSpan":[{"column":35,"line":174},{"column":38,"line":174}]},{"Name":"css","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\n[GHC.Types.Char]\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) (Data.Tree.NTree.TypeDefs.NTree\n               Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                   Text.XML.HXT.DOM.TypeDefs.XNode)","Type":"ArrowXml (IOSLA (XIOState ())) =>\n[Char] -> IOSLA (XIOState ()) (NTree XNode) (NTree XNode)","Module":"Text.HandsomeSoup"}],[{"SrcSpan":[{"column":39,"line":174},{"column":50,"line":174}]},[{"FastString":"\"enclosure\""},{"FastString":"\"enclosure\""}]]]],[{"SrcSpan":[{"column":51,"line":174},{"column":54,"line":174}]},{"Name":">>>","HType":"v","GType":"Var","QType":"forall (cat :: * -> * -> *) a b c.\nControl.Category.Category cat =>\ncat a b -> cat b c -> cat a c (Control.Arrow.IOStateListArrow.IOSLA\n                                 (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n                                    ())) (Data.Tree.NTree.TypeDefs.NTree\n                                            Text.XML.HXT.DOM.TypeDefs.XNode) (Data.Tree.NTree.TypeDefs.NTree\n                                                                                Text.XML.HXT.DOM.TypeDefs.XNode) (GHC.Base.String,\n                                                                                                                  GHC.Base.String)","Type":"forall (cat :: * -> * -> *) a b c.\nCategory cat =>\ncat a b -> cat b c -> cat a c (IOSLA (XIOState ())) (NTree\n                                                       XNode) (NTree XNode) (String, String)","Module":"Control.Category"}],[{"SrcSpan":[{"column":55,"line":174},{"column":85,"line":174}]},[[{"SrcSpan":[{"column":55,"line":174},{"column":62,"line":174}]},{"Name":"getName","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n     ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nIOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":63,"line":174},{"column":66,"line":174}]},{"Name":"&&&","HType":"v","GType":"Var","QType":"Control.Arrow.Arrow\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nforall b c c'.\nControl.Arrow.IOStateListArrow.IOSLA\n  (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b c'\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ()) b (c, c')","Type":"Arrow (IOSLA (XIOState ())) =>\nforall b c c'.\nIOSLA (XIOState ()) b c\n-> IOSLA (XIOState ()) b c' -> IOSLA (XIOState ()) b (c, c')","Module":"Control.Arrow"}],[{"SrcSpan":[{"column":67,"line":174},{"column":85,"line":174}]},[[{"SrcSpan":[{"column":67,"line":174},{"column":79,"line":174}]},{"Name":"getAttrValue","HType":"v","GType":"Var","QType":"Text.XML.HXT.Arrow.XmlArrow.ArrowXml\n  (Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState ())) =>\nGHC.Base.String\n-> Control.Arrow.IOStateListArrow.IOSLA\n     (Text.XML.HXT.Arrow.XmlState.TypeDefs.XIOState\n        ()) Text.XML.HXT.DOM.TypeDefs.XmlTree GHC.Base.String","Type":"ArrowXml (IOSLA (XIOState ())) =>\nString -> IOSLA (XIOState ()) XmlTree String","Module":"Text.XML.HXT.Arrow.XmlArrow"}],[{"SrcSpan":[{"column":80,"line":174},{"column":85,"line":174}]},[{"FastString":"\"url\""},{"FastString":"\"url\""}]]]]]]]]]]]]]]]]]]]]]]]]]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":13,"line":175},{"column":48,"line":175}]},[[{"SrcSpan":[{"column":13,"line":175},{"column":48,"line":175}]},[[{"SrcSpan":[{"column":13,"line":175},{"column":27,"line":175}]},[[{"SrcSpan":[{"column":13,"line":175},{"column":18,"line":175}]},{"Name":"mapM_","HType":"v","GType":"Var","QType":"forall (m :: * -> *) a b.\nGHC.Base.Monad m =>\n(a -> m b) -> [a] -> m () GHC.Types.IO [(GHC.Base.String,\n                                         GHC.Base.String)] ()","Type":"forall (m :: * -> *) a b.\nMonad m =>\n(a -> m b) -> [a] -> m () IO [(String, String)] ()","Module":"Control.Monad"}],[{"SrcSpan":[{"column":19,"line":175},{"column":27,"line":175}]},{"Name":"insertDB","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)] -> GHC.Types.IO ()","Type":"[(String, String)] -> IO ()","Module":"VOAScraper"}]]],[{"SrcSpan":[{"column":28,"line":175},{"column":48,"line":175}]},[{"SrcSpan":[{"column":29,"line":175},{"column":47,"line":175}]},[[{"SrcSpan":[{"column":29,"line":175},{"column":44,"line":175}]},[[{"SrcSpan":[{"column":29,"line":175},{"column":41,"line":175}]},[[{"SrcSpan":[{"column":29,"line":175},{"column":38,"line":175}]},{"Name":"groupItem","HType":"v","GType":"Var","QType":"forall t t1.\n(GHC.Classes.Eq t, Data.String.IsString t) =>\n[(t, t1)]\n-> [(t, t1)]\n-> [[(t, t1)]]\n-> [[(t, t1)]] GHC.Base.String GHC.Base.String","Type":"forall t t1.\n(Eq t, IsString t) =>\n[(t, t1)] -> [(t, t1)] -> [[(t, t1)]] -> [[(t, t1)]] String String","Module":""}],[{"SrcSpan":[{"column":39,"line":175},{"column":41,"line":175}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)]","Type":"[(String, String)]","Module":""}]]],[{"SrcSpan":[{"column":42,"line":175},{"column":44,"line":175}]},{"Name":"[]","HType":"v","GType":"Var","QType":"[(GHC.Base.String, GHC.Base.String)]","Type":"[(String, String)]","Module":"GHC.Types"}]]],[{"SrcSpan":[{"column":45,"line":175},{"column":47,"line":175}]},{"Name":"[]","HType":"v","GType":"Var","QType":"[[(GHC.Base.String, GHC.Base.String)]]","Type":"[[(String, String)]]","Module":"GHC.Types"}]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":19,"line":176},{"column":68,"line":179}]},[[{"Name":"t","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},{"Name":"t","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""}],[{"Name":"$dEq","HType":"v","GType":"Var","QType":"GHC.Classes.Eq t","Type":"Eq t","Module":""},{"Name":"$dIsString","HType":"v","GType":"Var","QType":"Data.String.IsString t","Type":"IsString t","Module":""}],[{"Name":"groupItem","HType":"v","GType":"Var","QType":"forall t t1.\n(GHC.Classes.Eq t, Data.String.IsString t) =>\n[(t, t1)] -> [(t, t1)] -> [[(t, t1)]] -> [[(t, t1)]]","Type":"forall t t1.\n(Eq t, IsString t) =>\n[(t, t1)] -> [(t, t1)] -> [[(t, t1)]] -> [[(t, t1)]]","Module":""},{"Name":"groupItem","HType":"v","GType":"Var","QType":"[(t, t)] -> [(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Type":"[(t, t)] -> [(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Module":""},[[[{"Name":"t","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},{"Name":"t","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""}],[{"Name":"$dEq","HType":"v","GType":"Var","QType":"GHC.Classes.Eq t","Type":"Eq t","Module":""},{"Name":"$dIsString","HType":"v","GType":"Var","QType":"Data.String.IsString t","Type":"IsString t","Module":""}]],[{"Name":"$dIsString","HType":"v","GType":"Var","QType":"Data.String.IsString t","Type":"IsString t","Module":""},{"Name":"$dEq","HType":"v","GType":"Var","QType":"GHC.Classes.Eq t","Type":"Eq t","Module":""}]]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":19,"line":176},{"column":68,"line":179}]},[[{"SrcSpan":[{"column":19,"line":176},{"column":28,"line":176}]},{"Name":"groupItem","HType":"v","GType":"Var","QType":"[(t, t)] -> [(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Type":"[(t, t)] -> [(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Module":""}],[[{"SrcSpan":[{"column":19,"line":176},{"column":69,"line":178}]},[[[{"SrcSpan":[{"column":29,"line":176},{"column":44,"line":176}]},[{"SrcSpan":[{"column":30,"line":176},{"column":43,"line":176}]},[[{"SrcSpan":[{"column":40,"line":176},{"column":41,"line":176}]},{"Name":":","GType":"DataCon","Module":"GHC.Types"}],[[{"SrcSpan":[{"column":30,"line":176},{"column":40,"line":176}]},[[{"SrcSpan":[{"column":31,"line":176},{"column":34,"line":176}]},{"Name":"key","HType":"v","GType":"Var","QType":"t","Type":"t","Module":""}],[{"SrcSpan":[{"column":36,"line":176},{"column":39,"line":176}]},{"Name":"val","HType":"v","GType":"Var","QType":"t","Type":"t","Module":""}]]],[{"SrcSpan":[{"column":41,"line":176},{"column":43,"line":176}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[(t, t)]","Type":"[(t, t)]","Module":""}]]]]],[{"SrcSpan":[{"column":45,"line":176},{"column":49,"line":176}]},{"Name":"item","HType":"v","GType":"Var","QType":"[(t, t)]","Type":"[(t, t)]","Module":""}],[{"SrcSpan":[{"column":50,"line":176},{"column":58,"line":176}]},{"Name":"allItems","HType":"v","GType":"Var","QType":"[[(t, t)]]","Type":"[[(t, t)]]","Module":""}]],[{"SrcSpan":[{"column":61,"line":176},{"column":69,"line":178}]},[{"SrcSpan":[{"column":61,"line":176},{"column":69,"line":178}]},[[{"SrcSpan":[{"column":64,"line":176},{"column":78,"line":176}]},[[{"SrcSpan":[{"column":64,"line":176},{"column":67,"line":176}]},{"Name":"key","HType":"v","GType":"Var","QType":"t","Type":"t","Module":""}],[{"SrcSpan":[{"column":68,"line":176},{"column":70,"line":176}]},{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq t => t -> t -> GHC.Types.Bool","Type":"Eq t => t -> t -> Bool","Module":"GHC.Classes"}],[{"SrcSpan":[{"column":71,"line":176},{"column":78,"line":176}]},[{"FastString":"\"title\""},[{"Name":"fromString","HType":"v","GType":"Var","QType":"Data.String.IsString t => GHC.Base.String -> t","Type":"IsString t => String -> t","Module":"Data.String"},{"FastString":"\"title\""}]]]]],[{"SrcSpan":[{"column":30,"line":177},{"column":71,"line":177}]},[[{"SrcSpan":[{"column":30,"line":177},{"column":55,"line":177}]},[[{"SrcSpan":[{"column":30,"line":177},{"column":42,"line":177}]},[[{"SrcSpan":[{"column":30,"line":177},{"column":39,"line":177}]},{"Name":"groupItem","HType":"v","GType":"Var","QType":"[(t, t)] -> [(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Type":"[(t, t)] -> [(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Module":""}],[{"SrcSpan":[{"column":40,"line":177},{"column":42,"line":177}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[(t, t)]","Type":"[(t, t)]","Module":""}]]],[{"SrcSpan":[{"column":43,"line":177},{"column":55,"line":177}]},[{"SrcSpan":[{"column":44,"line":177},{"column":54,"line":177}]},[[{"SrcSpan":[{"column":45,"line":177},{"column":48,"line":177}]},{"Name":"key","HType":"v","GType":"Var","QType":"t","Type":"t","Module":""}],[{"SrcSpan":[{"column":50,"line":177},{"column":53,"line":177}]},{"Name":"val","HType":"v","GType":"Var","QType":"t","Type":"t","Module":""}]]]]]],[{"SrcSpan":[{"column":56,"line":177},{"column":71,"line":177}]},[{"SrcSpan":[{"column":57,"line":177},{"column":70,"line":177}]},[[{"SrcSpan":[{"column":57,"line":177},{"column":61,"line":177}]},{"Name":"item","HType":"v","GType":"Var","QType":"[(t, t)]","Type":"[(t, t)]","Module":""}],[{"SrcSpan":[{"column":61,"line":177},{"column":62,"line":177}]},{"Name":":","HType":"v","GType":"Var","QType":"[(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Type":"[(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Module":"GHC.Types"}],[{"SrcSpan":[{"column":62,"line":177},{"column":70,"line":177}]},{"Name":"allItems","HType":"v","GType":"Var","QType":"[[(t, t)]]","Type":"[[(t, t)]]","Module":""}]]]]]],[{"SrcSpan":[{"column":30,"line":178},{"column":69,"line":178}]},[[{"SrcSpan":[{"column":30,"line":178},{"column":60,"line":178}]},[[{"SrcSpan":[{"column":30,"line":178},{"column":42,"line":178}]},[[{"SrcSpan":[{"column":30,"line":178},{"column":39,"line":178}]},{"Name":"groupItem","HType":"v","GType":"Var","QType":"[(t, t)] -> [(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Type":"[(t, t)] -> [(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Module":""}],[{"SrcSpan":[{"column":40,"line":178},{"column":42,"line":178}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[(t, t)]","Type":"[(t, t)]","Module":""}]]],[{"SrcSpan":[{"column":43,"line":178},{"column":60,"line":178}]},[{"SrcSpan":[{"column":44,"line":178},{"column":59,"line":178}]},[[{"SrcSpan":[{"column":44,"line":178},{"column":54,"line":178}]},[[{"SrcSpan":[{"column":45,"line":178},{"column":48,"line":178}]},{"Name":"key","HType":"v","GType":"Var","QType":"t","Type":"t","Module":""}],[{"SrcSpan":[{"column":50,"line":178},{"column":53,"line":178}]},{"Name":"val","HType":"v","GType":"Var","QType":"t","Type":"t","Module":""}]]],[{"SrcSpan":[{"column":54,"line":178},{"column":55,"line":178}]},{"Name":":","HType":"v","GType":"Var","QType":"(t, t) -> [(t, t)] -> [(t, t)]","Type":"(t, t) -> [(t, t)] -> [(t, t)]","Module":"GHC.Types"}],[{"SrcSpan":[{"column":55,"line":178},{"column":59,"line":178}]},{"Name":"item","HType":"v","GType":"Var","QType":"[(t, t)]","Type":"[(t, t)]","Module":""}]]]]]],[{"SrcSpan":[{"column":61,"line":178},{"column":69,"line":178}]},{"Name":"allItems","HType":"v","GType":"Var","QType":"[[(t, t)]]","Type":"[[(t, t)]]","Module":""}]]]]]]]],[{"SrcSpan":[{"column":19,"line":179},{"column":68,"line":179}]},[[[{"SrcSpan":[{"column":29,"line":179},{"column":31,"line":179}]},[{"SrcSpan":[{"column":29,"line":179},{"column":31,"line":179}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]],[{"SrcSpan":[{"column":32,"line":179},{"column":36,"line":179}]},{"Name":"item","HType":"v","GType":"Var","QType":"[(t, t)]","Type":"[(t, t)]","Module":""}],[{"SrcSpan":[{"column":37,"line":179},{"column":45,"line":179}]},{"Name":"allItems","HType":"v","GType":"Var","QType":"[[(t, t)]]","Type":"[[(t, t)]]","Module":""}]],[{"SrcSpan":[{"column":48,"line":179},{"column":68,"line":179}]},[{"SrcSpan":[{"column":48,"line":179},{"column":68,"line":179}]},[[{"SrcSpan":[{"column":48,"line":179},{"column":52,"line":179}]},{"Name":"init","HType":"v","GType":"Var","QType":"[[(t, t)]] -> [[(t, t)]]","Type":"[[(t, t)]] -> [[(t, t)]]","Module":"GHC.List"}],[{"SrcSpan":[{"column":53,"line":179},{"column":68,"line":179}]},[{"SrcSpan":[{"column":54,"line":179},{"column":67,"line":179}]},[[{"SrcSpan":[{"column":54,"line":179},{"column":58,"line":179}]},{"Name":"item","HType":"v","GType":"Var","QType":"[(t, t)]","Type":"[(t, t)]","Module":""}],[{"SrcSpan":[{"column":58,"line":179},{"column":59,"line":179}]},{"Name":":","HType":"v","GType":"Var","QType":"[(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Type":"[(t, t)] -> [[(t, t)]] -> [[(t, t)]]","Module":"GHC.Types"}],[{"SrcSpan":[{"column":59,"line":179},{"column":67,"line":179}]},{"Name":"allItems","HType":"v","GType":"Var","QType":"[[(t, t)]]","Type":"[[(t, t)]]","Module":""}]]]]]]]]]],"{!NameSet placeholder here!}"]]}]]}]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]]]],"{!NameSet placeholder here!}"]]}]],[{"SrcSpan":[{"column":1,"line":51},{"column":31,"line":56}]},[{"Name":"a","HType":"t","GType":"Var","QType":"*","Type":"*","Module":""},[{"Name":"explode","HType":"v","GType":"Var","QType":"forall a. (a -> GHC.Types.Bool) -> [a] -> [[a]]","Type":"forall a. (a -> Bool) -> [a] -> [[a]]","Module":"VOAScraper"},{"Name":"explode","HType":"v","GType":"Var","QType":"(a -> GHC.Types.Bool) -> [a] -> [[a]]","Type":"(a -> Bool) -> [a] -> [[a]]","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":51},{"column":31,"line":56}]},[[{"SrcSpan":[{"column":1,"line":51},{"column":8,"line":51}]},{"Name":"explode","HType":"v","GType":"Var","QType":"(a -> GHC.Types.Bool) -> [a] -> [[a]]","Type":"(a -> Bool) -> [a] -> [[a]]","Module":""}],[[{"SrcSpan":[{"column":1,"line":51},{"column":18,"line":51}]},[[{"SrcSpan":[{"column":9,"line":51},{"column":10,"line":51}]},[{"SrcSpan":[{"column":11,"line":51},{"column":13,"line":51}]},[{"SrcSpan":[{"column":11,"line":51},{"column":13,"line":51}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]]],[{"SrcSpan":[{"column":16,"line":51},{"column":18,"line":51}]},[{"SrcSpan":[{"column":16,"line":51},{"column":18,"line":51}]},{"Name":"[]","HType":"v","GType":"Var","QType":"[[a]]","Type":"[[a]]","Module":"GHC.Types"}]]]],[{"SrcSpan":[{"column":1,"line":52},{"column":31,"line":56}]},[[[{"SrcSpan":[{"column":9,"line":52},{"column":10,"line":52}]},{"Name":"f","HType":"v","GType":"Var","QType":"a -> GHC.Types.Bool","Type":"a -> Bool","Module":""}],[{"SrcSpan":[{"column":11,"line":52},{"column":13,"line":52}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]],[[[{"SrcSpan":[{"column":5,"line":53},{"column":20,"line":53}]},[[{"SrcSpan":[{"column":7,"line":53},{"column":14,"line":53}]},[[{"SrcSpan":[{"column":7,"line":53},{"column":14,"line":53}]},[[{"SrcSpan":[{"column":7,"line":53},{"column":11,"line":53}]},{"Name":"null","HType":"v","GType":"Var","QType":"[a] -> GHC.Types.Bool","Type":"[a] -> Bool","Module":"GHC.List"}],[{"SrcSpan":[{"column":12,"line":53},{"column":14,"line":53}]},{"Name":"zs","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]]],{"FastString":"\"noSyntaxExpr\""},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":17,"line":53},{"column":20,"line":53}]},[{"SrcSpan":[{"column":18,"line":53},{"column":19,"line":53}]},{"Name":"z","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]]]],[{"SrcSpan":[{"column":5,"line":54},{"column":36,"line":54}]},[[{"SrcSpan":[{"column":7,"line":54},{"column":13,"line":54}]},[[{"SrcSpan":[{"column":7,"line":54},{"column":13,"line":54}]},[[{"SrcSpan":[{"column":7,"line":54},{"column":11,"line":54}]},{"Name":"null","HType":"v","GType":"Var","QType":"[a] -> GHC.Types.Bool","Type":"[a] -> Bool","Module":"GHC.List"}],[{"SrcSpan":[{"column":12,"line":54},{"column":13,"line":54}]},{"Name":"z","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]]],{"FastString":"\"noSyntaxExpr\""},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":17,"line":54},{"column":36,"line":54}]},[[{"SrcSpan":[{"column":17,"line":54},{"column":26,"line":54}]},[[{"SrcSpan":[{"column":17,"line":54},{"column":24,"line":54}]},{"Name":"explode","HType":"v","GType":"Var","QType":"(a -> GHC.Types.Bool) -> [a] -> [[a]]","Type":"(a -> Bool) -> [a] -> [[a]]","Module":"VOAScraper"}],[{"SrcSpan":[{"column":25,"line":54},{"column":26,"line":54}]},{"Name":"f","HType":"v","GType":"Var","QType":"a -> GHC.Types.Bool","Type":"a -> Bool","Module":""}]]],[{"SrcSpan":[{"column":27,"line":54},{"column":36,"line":54}]},[{"SrcSpan":[{"column":28,"line":54},{"column":35,"line":54}]},[[{"SrcSpan":[{"column":28,"line":54},{"column":32,"line":54}]},{"Name":"tail","HType":"v","GType":"Var","QType":"[a] -> [a]","Type":"[a] -> [a]","Module":"GHC.List"}],[{"SrcSpan":[{"column":33,"line":54},{"column":35,"line":54}]},{"Name":"zs","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]]]]]]]],[{"SrcSpan":[{"column":5,"line":55},{"column":45,"line":55}]},[[{"SrcSpan":[{"column":7,"line":55},{"column":16,"line":55}]},[[{"SrcSpan":[{"column":7,"line":55},{"column":16,"line":55}]},{"Name":"otherwise","HType":"v","GType":"Var","QType":"GHC.Types.Bool","Type":"Bool","Module":"GHC.Base"}],{"FastString":"\"noSyntaxExpr\""},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":22,"line":55},{"column":45,"line":55}]},[[{"SrcSpan":[{"column":22,"line":55},{"column":23,"line":55}]},{"Name":"z","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}],[{"SrcSpan":[{"column":24,"line":55},{"column":25,"line":55}]},{"Name":":","HType":"v","GType":"Var","QType":"[a] -> [[a]] -> [[a]]","Type":"[a] -> [[a]] -> [[a]]","Module":"GHC.Types"}],[{"SrcSpan":[{"column":26,"line":55},{"column":45,"line":55}]},[[{"SrcSpan":[{"column":26,"line":55},{"column":35,"line":55}]},[[{"SrcSpan":[{"column":26,"line":55},{"column":33,"line":55}]},{"Name":"explode","HType":"v","GType":"Var","QType":"(a -> GHC.Types.Bool) -> [a] -> [[a]]","Type":"(a -> Bool) -> [a] -> [[a]]","Module":"VOAScraper"}],[{"SrcSpan":[{"column":34,"line":55},{"column":35,"line":55}]},{"Name":"f","HType":"v","GType":"Var","QType":"a -> GHC.Types.Bool","Type":"a -> Bool","Module":""}]]],[{"SrcSpan":[{"column":36,"line":55},{"column":45,"line":55}]},[{"SrcSpan":[{"column":37,"line":55},{"column":44,"line":55}]},[[{"SrcSpan":[{"column":37,"line":55},{"column":41,"line":55}]},{"Name":"tail","HType":"v","GType":"Var","QType":"[a] -> [a]","Type":"[a] -> [a]","Module":"GHC.List"}],[{"SrcSpan":[{"column":42,"line":55},{"column":44,"line":55}]},{"Name":"zs","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]]]]]]]]]]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":56},{"column":31,"line":56}]},[[[{"Name":"z","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""},{"Name":"z","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}],[{"Name":"zs","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""},{"Name":"zs","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":11,"line":56},{"column":31,"line":56}]},[[{"SrcSpan":[{"column":11,"line":56},{"column":18,"line":56}]},[[{"SrcSpan":[{"column":12,"line":56},{"column":13,"line":56}]},{"Name":"z","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}],[{"SrcSpan":[{"column":15,"line":56},{"column":17,"line":56}]},{"Name":"zs","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]]],[{"SrcSpan":[{"column":21,"line":56},{"column":31,"line":56}]},[{"SrcSpan":[{"column":21,"line":56},{"column":31,"line":56}]},[[{"SrcSpan":[{"column":21,"line":56},{"column":28,"line":56}]},[[{"SrcSpan":[{"column":21,"line":56},{"column":26,"line":56}]},{"Name":"break","HType":"v","GType":"Var","QType":"(a -> GHC.Types.Bool) -> [a] -> ([a], [a])","Type":"(a -> Bool) -> [a] -> ([a], [a])","Module":"GHC.List"}],[{"SrcSpan":[{"column":27,"line":56},{"column":28,"line":56}]},{"Name":"f","HType":"v","GType":"Var","QType":"a -> GHC.Types.Bool","Type":"a -> Bool","Module":""}]]],[{"SrcSpan":[{"column":29,"line":56},{"column":31,"line":56}]},{"Name":"xs","HType":"v","GType":"Var","QType":"[a]","Type":"[a]","Module":""}]]]],"{!NameSet placeholder here!}"]]}]]}]]]],"{!NameSet placeholder here!}"]]}]],[{"SrcSpan":[{"column":1,"line":59},{"column":46,"line":59}]},[[{"Name":"explode'","HType":"v","GType":"Var","QType":"GHC.Types.Char -> GHC.Base.String -> [GHC.Base.String]","Type":"Char -> String -> [String]","Module":"VOAScraper"},{"Name":"explode'","HType":"v","GType":"Var","QType":"GHC.Types.Char -> GHC.Base.String -> [GHC.Base.String]","Type":"Char -> String -> [String]","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":59},{"column":46,"line":59}]},[[{"SrcSpan":[{"column":1,"line":59},{"column":9,"line":59}]},{"Name":"explode'","HType":"v","GType":"Var","QType":"GHC.Types.Char -> GHC.Base.String -> [GHC.Base.String]","Type":"Char -> String -> [String]","Module":""}],[{"SrcSpan":[{"column":1,"line":59},{"column":46,"line":59}]},[[[{"SrcSpan":[{"column":10,"line":59},{"column":12,"line":59}]},{"Name":"sp","HType":"v","GType":"Var","QType":"GHC.Types.Char","Type":"Char","Module":""}],[{"SrcSpan":[{"column":13,"line":59},{"column":16,"line":59}]},{"Name":"str","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]],[{"SrcSpan":[{"column":19,"line":59},{"column":46,"line":59}]},[{"SrcSpan":[{"column":19,"line":59},{"column":46,"line":59}]},[[{"SrcSpan":[{"column":19,"line":59},{"column":42,"line":59}]},[[{"SrcSpan":[{"column":19,"line":59},{"column":26,"line":59}]},{"Name":"explode","HType":"v","GType":"Var","QType":"(GHC.Types.Char -> GHC.Types.Bool)\n-> [GHC.Types.Char] -> [[GHC.Types.Char]]","Type":"(Char -> Bool) -> [Char] -> [[Char]]","Module":"VOAScraper"}],[{"SrcSpan":[{"column":27,"line":59},{"column":42,"line":59}]},[{"SrcSpan":[{"column":28,"line":59},{"column":41,"line":59}]},[{"SrcSpan":[{"column":28,"line":59},{"column":41,"line":59}]},[[{"SrcSpan":[{"column":29,"line":59},{"column":30,"line":59}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Types.Char","Type":"Char","Module":""}],[{"SrcSpan":[{"column":34,"line":59},{"column":41,"line":59}]},[{"SrcSpan":[{"column":34,"line":59},{"column":41,"line":59}]},[[{"SrcSpan":[{"column":34,"line":59},{"column":35,"line":59}]},{"Name":"x","HType":"v","GType":"Var","QType":"GHC.Types.Char","Type":"Char","Module":""}],[{"SrcSpan":[{"column":36,"line":59},{"column":38,"line":59}]},{"Name":"==","HType":"v","GType":"Var","QType":"GHC.Classes.Eq GHC.Types.Char =>\nGHC.Types.Char -> GHC.Types.Char -> GHC.Types.Bool","Type":"Eq Char => Char -> Char -> Bool","Module":"GHC.Classes"}],[{"SrcSpan":[{"column":39,"line":59},{"column":41,"line":59}]},{"Name":"sp","HType":"v","GType":"Var","QType":"GHC.Types.Char","Type":"Char","Module":""}]]]]]]]]]],[{"SrcSpan":[{"column":43,"line":59},{"column":46,"line":59}]},{"Name":"str","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]],"{!NameSet placeholder here!}"]]}]],[{"SrcSpan":[{"column":1,"line":183},{"column":27,"line":190}]},[[{"Name":"main","HType":"v","GType":"Var","QType":"GHC.Types.IO ()","Type":"IO ()","Module":"VOAScraper"},{"Name":"main","HType":"v","GType":"Var","QType":"GHC.Types.IO ()","Type":"IO ()","Module":""}],{"Bag(Located (HsBind Var))":[{"SrcSpan":[{"column":1,"line":183},{"column":27,"line":190}]},[[{"SrcSpan":[{"column":1,"line":183},{"column":5,"line":183}]},{"Name":"main","HType":"v","GType":"Var","QType":"GHC.Types.IO ()","Type":"IO ()","Module":""}],[{"SrcSpan":[{"column":1,"line":183},{"column":27,"line":190}]},[{"SrcSpan":[{"column":8,"line":183},{"column":27,"line":190}]},[{"SrcSpan":[{"column":8,"line":183},{"column":27,"line":190}]},[[{"SrcSpan":[{"column":5,"line":184},{"column":20,"line":184}]},[[{"SrcSpan":[{"column":5,"line":184},{"column":9,"line":184}]},{"Name":"args","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[{"SrcSpan":[{"column":13,"line":184},{"column":20,"line":184}]},{"Name":"getArgs","HType":"v","GType":"Var","QType":"GHC.Types.IO [GHC.Base.String]","Type":"IO [String]","Module":"System.Environment"}],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":5,"line":185},{"column":27,"line":190}]},[[{"SrcSpan":[{"column":5,"line":185},{"column":27,"line":190}]},[[{"SrcSpan":[{"column":10,"line":185},{"column":14,"line":185}]},{"Name":"args","HType":"v","GType":"Var","QType":"[GHC.Base.String]","Type":"[String]","Module":""}],[[{"SrcSpan":[{"column":9,"line":186},{"column":53,"line":186}]},[[{"SrcSpan":[{"column":9,"line":186},{"column":11,"line":186}]},[{"SrcSpan":[{"column":9,"line":186},{"column":11,"line":186}]},{"Name":"[]","GType":"DataCon","Module":"GHC.Types"}]],[{"SrcSpan":[{"column":15,"line":186},{"column":53,"line":186}]},[{"SrcSpan":[{"column":15,"line":186},{"column":53,"line":186}]},[[{"SrcSpan":[{"column":15,"line":186},{"column":23,"line":186}]},{"Name":"putStrLn","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"System.IO"}],[{"SrcSpan":[{"column":24,"line":186},{"column":53,"line":186}]},[{"FastString":"\"Useage: command <feed_file>\""},{"FastString":"\"Useage: command <feed_file>\""}]]]]]]],[{"SrcSpan":[{"column":9,"line":187},{"column":27,"line":190}]},[[{"SrcSpan":[{"column":9,"line":187},{"column":21,"line":187}]},[{"SrcSpan":[{"column":10,"line":187},{"column":20,"line":187}]},[[{"SrcSpan":[{"column":18,"line":187},{"column":19,"line":187}]},{"Name":":","GType":"DataCon","Module":"GHC.Types"}],[[{"SrcSpan":[{"column":10,"line":187},{"column":18,"line":187}]},{"Name":"feedfile","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],{"SrcSpan":[{"column":19,"line":187},{"column":20,"line":187}]}]]]],[{"SrcSpan":[{"column":25,"line":187},{"column":27,"line":190}]},[{"SrcSpan":[{"column":25,"line":187},{"column":27,"line":190}]},[[{"SrcSpan":[{"column":13,"line":188},{"column":44,"line":188}]},[[{"SrcSpan":[{"column":13,"line":188},{"column":23,"line":188}]},{"Name":"rawContent","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}],[{"SrcSpan":[{"column":27,"line":188},{"column":44,"line":188}]},[[{"SrcSpan":[{"column":27,"line":188},{"column":35,"line":188}]},{"Name":"readFile","HType":"v","GType":"Var","QType":"GHC.IO.FilePath -> GHC.Types.IO GHC.Base.String","Type":"FilePath -> IO String","Module":"System.IO"}],[{"SrcSpan":[{"column":36,"line":188},{"column":44,"line":188}]},{"Name":"feedfile","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]],{"Name":">>=","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b.\nGHC.Types.IO a -> (a -> GHC.Types.IO b) -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> (a -> IO b) -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":13,"line":189},{"column":65,"line":189}]},[[{"SrcSpan":[{"column":13,"line":189},{"column":65,"line":189}]},[[{"SrcSpan":[{"column":13,"line":189},{"column":22,"line":189}]},{"Name":"parallel_","HType":"v","GType":"Var","QType":"[GHC.Types.IO ()] -> GHC.Types.IO ()","Type":"[IO ()] -> IO ()","Module":"Control.Concurrent.ParallelIO.Global"}],[{"SrcSpan":[{"column":23,"line":189},{"column":24,"line":189}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b [GHC.Types.IO ()] (GHC.Types.IO ())","Type":"forall a b. (a -> b) -> a -> b [IO ()] (IO ())","Module":"GHC.Base"}],[{"SrcSpan":[{"column":25,"line":189},{"column":65,"line":189}]},[[{"SrcSpan":[{"column":25,"line":189},{"column":38,"line":189}]},[[{"SrcSpan":[{"column":25,"line":189},{"column":28,"line":189}]},{"Name":"map","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> [a] -> [b] GHC.Base.String (GHC.Types.IO\n                                                      ())","Type":"forall a b. (a -> b) -> [a] -> [b] String (IO ())","Module":"GHC.Base"}],[{"SrcSpan":[{"column":29,"line":189},{"column":38,"line":189}]},{"Name":"scrapeXML","HType":"v","GType":"Var","QType":"GHC.Base.String -> GHC.Types.IO ()","Type":"String -> IO ()","Module":"VOAScraper"}]]],[{"SrcSpan":[{"column":39,"line":189},{"column":40,"line":189}]},{"Name":"$","HType":"v","GType":"Var","QType":"forall a b. (a -> b) -> a -> b [GHC.Base.String] [GHC.Types.IO ()]","Type":"forall a b. (a -> b) -> a -> b [String] [IO ()]","Module":"GHC.Base"}],[{"SrcSpan":[{"column":41,"line":189},{"column":65,"line":189}]},[[{"SrcSpan":[{"column":41,"line":189},{"column":54,"line":189}]},[[{"SrcSpan":[{"column":41,"line":189},{"column":49,"line":189}]},{"Name":"explode'","HType":"v","GType":"Var","QType":"GHC.Types.Char -> GHC.Base.String -> [GHC.Base.String]","Type":"Char -> String -> [String]","Module":"VOAScraper"}],{"SrcSpan":[{"column":50,"line":189},{"column":54,"line":189}]}]],[{"SrcSpan":[{"column":55,"line":189},{"column":65,"line":189}]},{"Name":"rawContent","HType":"v","GType":"Var","QType":"GHC.Base.String","Type":"String","Module":""}]]]]]]],{"Name":">>","HType":"v","GType":"Var","QType":"GHC.Base.Monad GHC.Types.IO =>\nforall a b. GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO b","Type":"Monad IO => forall a b. IO a -> IO b -> IO b","Module":"GHC.Base"},{"FastString":"\"noSyntaxExpr\""}]],[{"SrcSpan":[{"column":13,"line":190},{"column":27,"line":190}]},[[{"SrcSpan":[{"column":13,"line":190},{"column":27,"line":190}]},{"Name":"stopGlobalPool","HType":"v","GType":"Var","QType":"GHC.Types.IO ()","Type":"IO ()","Module":"Control.Concurrent.ParallelIO.Global"}],{"FastString":"\"noSyntaxExpr\""}]]]]]]]]]],{"FastString":"\"noSyntaxExpr\""}]]]]]],"{!NameSet placeholder here!}"]]}]]]},"BuildFlags":[{"a":["-package-conf","/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/package.conf.inplace","-hide-all-packages","-fbuilding-cabal-package","-i","-i/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-isrc","-i/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/build/autogen","-I/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/build/autogen","-I/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-optP-include","-optP/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/build/autogen/cabal_macros.h","-odir","/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-hidir","/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-stubdir","/Users/jon/Documents/workspace/WebScraper/.dist-buildwrapper/dist/build/WebScraper/WebScraper-tmp","-package-id","HDBC-2.3.1.1-8bc84a80ddcafe759c86f64279e220ad","-package-id","HDBC-sqlite3-2.3.3.0-0bea2bc50ee9f66702ff7d45ab15ce22","-package-id","HandsomeSoup-0.3.1-3dad5c94c784cfa3c9462f58c3615acf","-package-id","MaybeT-0.1.2-ab2a535e19377675b0866e4fc337ca22","-package-id","base-4.5.0.0-7aff24101508c8e98d083dc12ec4756b","-package-id","containers-0.4.2.1-cfc6420ecc2194c9ed977b06bdfd9e69","-package-id","hxt-9.2.2-9d510b6124460db8b2709d4665cb69e6","-package-id","old-time-1.1.0.0-b77788a065c86ada9ba279afa5e04576","-package-id","parallel-io-0.3.2-b50136a4e43ad2c72089c627b0b11e8d","-Wall","-XHaskell98"],"p":["-D__GLASGOW_HASKELL__=704"],"m":"VOAScraper"},[]]}